"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[599],{9034:function(e,t,i){i.d(t,{XX:function(){return tK},ck:function(){return t4}});var n=i(2079),r=i(1448),o=(e,t,i)=>new Promise((n,r)=>{var o=e=>{try{a(i.next(e))}catch(e){r(e)}},s=e=>{try{a(i.throw(e))}catch(e){r(e)}},a=e=>e.done?n(e.value):Promise.resolve(e.value).then(o,s);a((i=i.apply(e,t)).next())}),s=(e,t,i)=>new Promise((n,r)=>{var o=e=>{try{a(i.next(e))}catch(e){r(e)}},s=e=>{try{a(i.throw(e))}catch(e){r(e)}},a=e=>e.done?n(e.value):Promise.resolve(e.value).then(o,s);a((i=i.apply(e,t)).next())}),a=class extends n.Tme{constructor(e){super(),this.weight=0,this.isBinary=!1,this.overrideBlink="none",this.overrideLookAt="none",this.overrideMouth="none",this._binds=[],this.name=`VRMExpression_${e}`,this.expressionName=e,this.type="VRMExpression",this.visible=!1}get binds(){return this._binds}get overrideBlinkAmount(){return"block"===this.overrideBlink?0<this.outputWeight?1:0:"blend"===this.overrideBlink?this.outputWeight:0}get overrideLookAtAmount(){return"block"===this.overrideLookAt?0<this.outputWeight?1:0:"blend"===this.overrideLookAt?this.outputWeight:0}get overrideMouthAmount(){return"block"===this.overrideMouth?0<this.outputWeight?1:0:"blend"===this.overrideMouth?this.outputWeight:0}get outputWeight(){return this.isBinary?this.weight>.5?1:0:this.weight}addBind(e){this._binds.push(e)}deleteBind(e){let t=this._binds.indexOf(e);t>=0&&this._binds.splice(t,1)}applyWeight(e){var t;let i=this.outputWeight;i*=null!=(t=null==e?void 0:e.multiplier)?t:1,this.isBinary&&i<1&&(i=0),this._binds.forEach(e=>e.applyWeight(i))}clearAppliedWeight(){this._binds.forEach(e=>e.clearAppliedWeight())}};function l(e,t,i){var n,r;let o=e.parser.json,s=null==(n=o.nodes)?void 0:n[t];if(null==s)return console.warn(`extractPrimitivesInternal: Attempt to use nodes[${t}] of glTF but the node doesn't exist`),null;let a=s.mesh;if(null==a)return null;let l=null==(r=o.meshes)?void 0:r[a];if(null==l)return console.warn(`extractPrimitivesInternal: Attempt to use meshes[${a}] of glTF but the mesh doesn't exist`),null;let u=l.primitives.length,d=[];return i.traverse(e=>{d.length<u&&e.isMesh&&d.push(e)}),d}function u(e,t){return s(this,null,function*(){let i=yield e.parser.getDependency("node",t);return l(e,t,i)})}function d(e){return s(this,null,function*(){let t=yield e.parser.getDependencies("node"),i=new Map;return t.forEach((t,n)=>{let r=l(e,n,t);null!=r&&i.set(n,r)}),i})}var h={Aa:"aa",Ih:"ih",Ou:"ou",Ee:"ee",Oh:"oh",Blink:"blink",Happy:"happy",Angry:"angry",Sad:"sad",Relaxed:"relaxed",LookUp:"lookUp",Surprised:"surprised",LookDown:"lookDown",LookLeft:"lookLeft",LookRight:"lookRight",BlinkLeft:"blinkLeft",BlinkRight:"blinkRight",Neutral:"neutral"};function p(e){return Math.max(Math.min(e,1),0)}var c=class e{constructor(){this.blinkExpressionNames=["blink","blinkLeft","blinkRight"],this.lookAtExpressionNames=["lookLeft","lookRight","lookUp","lookDown"],this.mouthExpressionNames=["aa","ee","ih","oh","ou"],this._expressions=[],this._expressionMap={}}get expressions(){return this._expressions.concat()}get expressionMap(){return Object.assign({},this._expressionMap)}get presetExpressionMap(){let e={},t=new Set(Object.values(h));return Object.entries(this._expressionMap).forEach(([i,n])=>{t.has(i)&&(e[i]=n)}),e}get customExpressionMap(){let e={},t=new Set(Object.values(h));return Object.entries(this._expressionMap).forEach(([i,n])=>{t.has(i)||(e[i]=n)}),e}copy(e){return this._expressions.concat().forEach(e=>{this.unregisterExpression(e)}),e._expressions.forEach(e=>{this.registerExpression(e)}),this.blinkExpressionNames=e.blinkExpressionNames.concat(),this.lookAtExpressionNames=e.lookAtExpressionNames.concat(),this.mouthExpressionNames=e.mouthExpressionNames.concat(),this}clone(){return new e().copy(this)}getExpression(e){var t;return null!=(t=this._expressionMap[e])?t:null}registerExpression(e){this._expressions.push(e),this._expressionMap[e.expressionName]=e}unregisterExpression(e){let t=this._expressions.indexOf(e);-1===t&&console.warn("VRMExpressionManager: The specified expressions is not registered"),this._expressions.splice(t,1),delete this._expressionMap[e.expressionName]}getValue(e){var t;let i=this.getExpression(e);return null!=(t=null==i?void 0:i.weight)?t:null}setValue(e,t){let i=this.getExpression(e);i&&(i.weight=p(t))}resetValues(){this._expressions.forEach(e=>{e.weight=0})}getExpressionTrackName(e){let t=this.getExpression(e);return t?`${t.name}.weight`:null}update(){let e=this._calculateWeightMultipliers();this._expressions.forEach(e=>{e.clearAppliedWeight()}),this._expressions.forEach(t=>{let i=1,n=t.expressionName;-1!==this.blinkExpressionNames.indexOf(n)&&(i*=e.blink),-1!==this.lookAtExpressionNames.indexOf(n)&&(i*=e.lookAt),-1!==this.mouthExpressionNames.indexOf(n)&&(i*=e.mouth),t.applyWeight({multiplier:i})})}_calculateWeightMultipliers(){let e=1,t=1,i=1;return this._expressions.forEach(n=>{e-=n.overrideBlinkAmount,t-=n.overrideLookAtAmount,i-=n.overrideMouthAmount}),{blink:e=Math.max(0,e),lookAt:t=Math.max(0,t),mouth:i=Math.max(0,i)}}},m={_Color:"color",_EmissionColor:"emissionColor",_ShadeColor:"shadeColor",_RimColor:"rimColor",_OutlineColor:"outlineColor"},f=new n.Ilk,g=class e{constructor({material:e,type:t,targetValue:i,targetAlpha:n}){this.material=e,this.type=t,this.targetValue=i,this.targetAlpha=null!=n?n:1;let r=this._initColorBindState(),o=this._initAlphaBindState();this._state={color:r,alpha:o}}applyWeight(e){let{color:t,alpha:i}=this._state;if(null!=t){let{propertyName:i,deltaValue:n}=t,r=this.material[i];void 0!=r&&r.add(f.copy(n).multiplyScalar(e))}if(null!=i){let{propertyName:t,deltaValue:n}=i;void 0!=this.material[t]&&(this.material[t]+=n*e)}}clearAppliedWeight(){let{color:e,alpha:t}=this._state;if(null!=e){let{propertyName:t,initialValue:i}=e,n=this.material[t];void 0!=n&&n.copy(i)}if(null!=t){let{propertyName:e,initialValue:i}=t;void 0!=this.material[e]&&(this.material[e]=i)}}_initColorBindState(){var e,t,i;let{material:r,type:o,targetValue:s}=this,a=this._getPropertyNameMap(),l=null!=(t=null==(e=null==a?void 0:a[o])?void 0:e[0])?t:null;if(null==l)return console.warn(`Tried to add a material color bind to the material ${null!=(i=r.name)?i:"(no name)"}, the type ${o} but the material or the type is not supported.`),null;let u=r[l].clone(),d=new n.Ilk(s.r-u.r,s.g-u.g,s.b-u.b);return{propertyName:l,initialValue:u,deltaValue:d}}_initAlphaBindState(){var e,t,i;let{material:n,type:r,targetAlpha:o}=this,s=this._getPropertyNameMap(),a=null!=(t=null==(e=null==s?void 0:s[r])?void 0:e[1])?t:null;if(null==a&&1!==o)return console.warn(`Tried to add a material alpha bind to the material ${null!=(i=n.name)?i:"(no name)"}, the type ${r} but the material or the type does not support alpha.`),null;if(null==a)return null;let l=n[a];return{propertyName:a,initialValue:l,deltaValue:o-l}}_getPropertyNameMap(){var t,i;return null!=(i=null==(t=Object.entries(e._propertyNameMapMap).find(([e])=>!0===this.material[e]))?void 0:t[1])?i:null}};g._propertyNameMapMap={isMeshStandardMaterial:{color:["color","opacity"],emissionColor:["emissive",null]},isMeshBasicMaterial:{color:["color","opacity"]},isMToonMaterial:{color:["color","opacity"],emissionColor:["emissive",null],outlineColor:["outlineColorFactor",null],matcapColor:["matcapFactor",null],rimColor:["parametricRimColorFactor",null],shadeColor:["shadeColorFactor",null]}};var _=class{constructor({primitives:e,index:t,weight:i}){this.primitives=e,this.index=t,this.weight=i}applyWeight(e){this.primitives.forEach(t=>{var i;(null==(i=t.morphTargetInfluences)?void 0:i[this.index])!=null&&(t.morphTargetInfluences[this.index]+=this.weight*e)})}clearAppliedWeight(){this.primitives.forEach(e=>{var t;(null==(t=e.morphTargetInfluences)?void 0:t[this.index])!=null&&(e.morphTargetInfluences[this.index]=0)})}},v=new n.FM8,M=class e{constructor({material:t,scale:i,offset:n}){var r,o;this.material=t,this.scale=i,this.offset=n;let s=null==(r=Object.entries(e._propertyNamesMap).find(([e])=>!0===t[e]))?void 0:r[1];null==s?(console.warn(`Tried to add a texture transform bind to the material ${null!=(o=t.name)?o:"(no name)"} but the material is not supported.`),this._properties=[]):(this._properties=[],s.forEach(e=>{var r;let o=null==(r=t[e])?void 0:r.clone();if(!o)return null;t[e]=o;let s=o.offset.clone(),a=o.repeat.clone(),l=n.clone().sub(s),u=i.clone().sub(a);this._properties.push({name:e,initialOffset:s,deltaOffset:l,initialScale:a,deltaScale:u})}))}applyWeight(e){this._properties.forEach(t=>{let i=this.material[t.name];void 0!==i&&(i.offset.add(v.copy(t.deltaOffset).multiplyScalar(e)),i.repeat.add(v.copy(t.deltaScale).multiplyScalar(e)))})}clearAppliedWeight(){this._properties.forEach(e=>{let t=this.material[e.name];void 0!==t&&(t.offset.copy(e.initialOffset),t.repeat.copy(e.initialScale))})}};M._propertyNamesMap={isMeshStandardMaterial:["map","emissiveMap","bumpMap","normalMap","displacementMap","roughnessMap","metalnessMap","alphaMap"],isMeshBasicMaterial:["map","specularMap","alphaMap"],isMToonMaterial:["map","normalMap","emissiveMap","shadeMultiplyTexture","rimMultiplyTexture","outlineWidthMultiplyTexture","uvAnimationMaskTexture"]};var x=new Set(["1.0","1.0-beta"]),y=class e{get name(){return"VRMExpressionLoaderPlugin"}constructor(e){this.parser=e}afterRoot(e){return s(this,null,function*(){e.userData.vrmExpressionManager=yield this._import(e)})}_import(e){return s(this,null,function*(){let t=yield this._v1Import(e);return t?t:(yield this._v0Import(e))||null})}_v1Import(e){return s(this,null,function*(){var t,i;let r=this.parser.json;if(!((null==(t=r.extensionsUsed)?void 0:t.indexOf("VRMC_vrm"))!==-1))return null;let o=null==(i=r.extensions)?void 0:i.VRMC_vrm;if(!o)return null;let l=o.specVersion;if(!x.has(l))return console.warn(`VRMExpressionLoaderPlugin: Unknown VRMC_vrm specVersion "${l}"`),null;let d=o.expressions;if(!d)return null;let p=new Set(Object.values(h)),m=new Map;null!=d.preset&&Object.entries(d.preset).forEach(([e,t])=>{if(null!=t){if(!p.has(e)){console.warn(`VRMExpressionLoaderPlugin: Unknown preset name "${e}" detected. Ignoring the expression`);return}m.set(e,t)}}),null!=d.custom&&Object.entries(d.custom).forEach(([e,t])=>{if(p.has(e)){console.warn(`VRMExpressionLoaderPlugin: Custom expression cannot have preset name "${e}". Ignoring the expression`);return}m.set(e,t)});let f=new c;return yield Promise.all(Array.from(m.entries()).map(t=>s(this,[t],function*([t,i]){var r,o,l,d,h,p,c;let m=new a(t);if(e.scene.add(m),m.isBinary=null!=(r=i.isBinary)&&r,m.overrideBlink=null!=(o=i.overrideBlink)?o:"none",m.overrideLookAt=null!=(l=i.overrideLookAt)?l:"none",m.overrideMouth=null!=(d=i.overrideMouth)?d:"none",null==(h=i.morphTargetBinds)||h.forEach(t=>s(this,null,function*(){var n;if(void 0===t.node||void 0===t.index)return;let r=yield u(e,t.node),o=t.index;if(!r.every(e=>Array.isArray(e.morphTargetInfluences)&&o<e.morphTargetInfluences.length)){console.warn(`VRMExpressionLoaderPlugin: ${i.name} attempts to index morph #${o} but not found.`);return}m.addBind(new _({primitives:r,index:o,weight:null!=(n=t.weight)?n:1}))})),i.materialColorBinds||i.textureTransformBinds){let t=[];e.scene.traverse(e=>{let i=e.material;i&&(Array.isArray(i)?t.push(...i):t.push(i))}),null==(p=i.materialColorBinds)||p.forEach(e=>s(this,null,function*(){t.filter(t=>{var i;let n=null==(i=this.parser.associations.get(t))?void 0:i.materials;return e.material===n}).forEach(t=>{m.addBind(new g({material:t,type:e.type,targetValue:new n.Ilk().fromArray(e.targetValue),targetAlpha:e.targetValue[3]}))})})),null==(c=i.textureTransformBinds)||c.forEach(e=>s(this,null,function*(){t.filter(t=>{var i;let n=null==(i=this.parser.associations.get(t))?void 0:i.materials;return e.material===n}).forEach(t=>{var i,r;m.addBind(new M({material:t,offset:new n.FM8().fromArray(null!=(i=e.offset)?i:[0,0]),scale:new n.FM8().fromArray(null!=(r=e.scale)?r:[1,1])}))})}))}f.registerExpression(m)}))),f})}_v0Import(t){return s(this,null,function*(){var i;let r=this.parser.json,o=null==(i=r.extensions)?void 0:i.VRM;if(!o)return null;let l=o.blendShapeMaster;if(!l)return null;let d=new c,h=l.blendShapeGroups;if(!h)return d;let p=new Set;return yield Promise.all(h.map(i=>s(this,null,function*(){var o;let l=i.presetName,h=null!=l&&e.v0v1PresetNameMap[l]||null,c=null!=h?h:i.name;if(null==c){console.warn("VRMExpressionLoaderPlugin: One of custom expressions has no name. Ignoring the expression");return}if(p.has(c)){console.warn(`VRMExpressionLoaderPlugin: An expression preset ${l} has duplicated entries. Ignoring the expression`);return}p.add(c);let f=new a(c);t.scene.add(f),f.isBinary=null!=(o=i.isBinary)&&o,i.binds&&i.binds.forEach(e=>s(this,null,function*(){var n;if(void 0===e.mesh||void 0===e.index)return;let o=[];null==(n=r.nodes)||n.forEach((t,i)=>{t.mesh===e.mesh&&o.push(i)});let a=e.index;yield Promise.all(o.map(n=>s(this,null,function*(){var r;let o=yield u(t,n);if(!o.every(e=>Array.isArray(e.morphTargetInfluences)&&a<e.morphTargetInfluences.length)){console.warn(`VRMExpressionLoaderPlugin: ${i.name} attempts to index ${a}th morph but not found.`);return}f.addBind(new _({primitives:o,index:a,weight:.01*(null!=(r=e.weight)?r:100)}))})))}));let v=i.materialValues;v&&0!==v.length&&v.forEach(e=>{if(void 0===e.materialName||void 0===e.propertyName||void 0===e.targetValue)return;let i=[];t.scene.traverse(t=>{if(t.material){let n=t.material;Array.isArray(n)?i.push(...n.filter(t=>(t.name===e.materialName||t.name===e.materialName+" (Outline)")&&-1===i.indexOf(t))):n.name===e.materialName&&-1===i.indexOf(n)&&i.push(n)}});let r=e.propertyName;i.forEach(t=>{if("_MainTex_ST"===r){let i=new n.FM8(e.targetValue[0],e.targetValue[1]),r=new n.FM8(e.targetValue[2],e.targetValue[3]);r.y=1-r.y-i.y,f.addBind(new M({material:t,scale:i,offset:r}));return}let i=m[r];if(i){f.addBind(new g({material:t,type:i,targetValue:new n.Ilk().fromArray(e.targetValue),targetAlpha:e.targetValue[3]}));return}console.warn(r+" is not supported")})}),d.registerExpression(f)}))),d})}};y.v0v1PresetNameMap={a:"aa",e:"ee",i:"ih",o:"oh",u:"ou",blink:"blink",joy:"happy",angry:"angry",sorrow:"sad",fun:"relaxed",lookup:"lookUp",lookdown:"lookDown",lookleft:"lookLeft",lookright:"lookRight",blink_l:"blinkLeft",blink_r:"blinkRight",neutral:"neutral"};var w=class e{constructor(t,i){this._firstPersonOnlyLayer=e.DEFAULT_FIRSTPERSON_ONLY_LAYER,this._thirdPersonOnlyLayer=e.DEFAULT_THIRDPERSON_ONLY_LAYER,this._initializedLayers=!1,this.humanoid=t,this.meshAnnotations=i}copy(e){if(this.humanoid!==e.humanoid)throw Error("VRMFirstPerson: humanoid must be same in order to copy");return this.meshAnnotations=e.meshAnnotations.map(e=>({meshes:e.meshes.concat(),type:e.type})),this}clone(){return new e(this.humanoid,this.meshAnnotations).copy(this)}get firstPersonOnlyLayer(){return this._firstPersonOnlyLayer}get thirdPersonOnlyLayer(){return this._thirdPersonOnlyLayer}setup({firstPersonOnlyLayer:t=e.DEFAULT_FIRSTPERSON_ONLY_LAYER,thirdPersonOnlyLayer:i=e.DEFAULT_THIRDPERSON_ONLY_LAYER}={}){this._initializedLayers||(this._firstPersonOnlyLayer=t,this._thirdPersonOnlyLayer=i,this.meshAnnotations.forEach(e=>{e.meshes.forEach(t=>{"firstPersonOnly"===e.type?(t.layers.set(this._firstPersonOnlyLayer),t.traverse(e=>e.layers.set(this._firstPersonOnlyLayer))):"thirdPersonOnly"===e.type?(t.layers.set(this._thirdPersonOnlyLayer),t.traverse(e=>e.layers.set(this._thirdPersonOnlyLayer))):"auto"===e.type&&this._createHeadlessModel(t)})}),this._initializedLayers=!0)}_excludeTriangles(e,t,i,n){let r=0;if(null!=t&&t.length>0)for(let o=0;o<e.length;o+=3){let s=e[o],a=e[o+1],l=e[o+2],u=t[s],d=i[s];if(u[0]>0&&n.includes(d[0])||u[1]>0&&n.includes(d[1])||u[2]>0&&n.includes(d[2])||u[3]>0&&n.includes(d[3]))continue;let h=t[a],p=i[a];if(h[0]>0&&n.includes(p[0])||h[1]>0&&n.includes(p[1])||h[2]>0&&n.includes(p[2])||h[3]>0&&n.includes(p[3]))continue;let c=t[l],m=i[l];!(c[0]>0&&n.includes(m[0])||c[1]>0&&n.includes(m[1])||c[2]>0&&n.includes(m[2]))&&(c[3]>0&&n.includes(m[3])||(e[r++]=s,e[r++]=a,e[r++]=l))}return r}_createErasedMesh(e,t){let i=new n.TUv(e.geometry.clone(),e.material);i.name=`${e.name}(erase)`,i.frustumCulled=e.frustumCulled,i.layers.set(this._firstPersonOnlyLayer);let r=i.geometry,o=r.getAttribute("skinIndex"),s=o instanceof n.ylh?[]:o.array,a=[];for(let e=0;e<s.length;e+=4)a.push([s[e],s[e+1],s[e+2],s[e+3]]);let l=r.getAttribute("skinWeight"),u=l instanceof n.ylh?[]:l.array,d=[];for(let e=0;e<u.length;e+=4)d.push([u[e],u[e+1],u[e+2],u[e+3]]);let h=r.getIndex();if(!h)throw Error("The geometry doesn't have an index buffer");let p=Array.from(h.array),c=this._excludeTriangles(p,d,a,t),m=[];for(let e=0;e<c;e++)m[e]=p[e];return r.setIndex(m),e.onBeforeRender&&(i.onBeforeRender=e.onBeforeRender),i.bind(new n.OdW(e.skeleton.bones,e.skeleton.boneInverses),new n.yGw),i}_createHeadlessModelForSkinnedMesh(e,t){let i=[];if(t.skeleton.bones.forEach((e,t)=>{this._isEraseTarget(e)&&i.push(t)}),!i.length){t.layers.enable(this._thirdPersonOnlyLayer),t.layers.enable(this._firstPersonOnlyLayer);return}t.layers.set(this._thirdPersonOnlyLayer);let n=this._createErasedMesh(t,i);e.add(n)}_createHeadlessModel(e){if("Group"===e.type){if(e.layers.set(this._thirdPersonOnlyLayer),this._isEraseTarget(e))e.traverse(e=>e.layers.set(this._thirdPersonOnlyLayer));else{let t=new n.ZAu;t.name=`_headless_${e.name}`,t.layers.set(this._firstPersonOnlyLayer),e.parent.add(t),e.children.filter(e=>"SkinnedMesh"===e.type).forEach(e=>{this._createHeadlessModelForSkinnedMesh(t,e)})}}else"SkinnedMesh"===e.type?this._createHeadlessModelForSkinnedMesh(e.parent,e):this._isEraseTarget(e)&&(e.layers.set(this._thirdPersonOnlyLayer),e.traverse(e=>e.layers.set(this._thirdPersonOnlyLayer)))}_isEraseTarget(e){return e===this.humanoid.getRawBoneNode("head")||!!e.parent&&this._isEraseTarget(e.parent)}};w.DEFAULT_FIRSTPERSON_ONLY_LAYER=9,w.DEFAULT_THIRDPERSON_ONLY_LAYER=10;var T=new Set(["1.0","1.0-beta"]),P=class{get name(){return"VRMFirstPersonLoaderPlugin"}constructor(e){this.parser=e}afterRoot(e){return s(this,null,function*(){let t=e.userData.vrmHumanoid;if(null!==t){if(void 0===t)throw Error("VRMFirstPersonLoaderPlugin: vrmHumanoid is undefined. VRMHumanoidLoaderPlugin have to be used first");e.userData.vrmFirstPerson=yield this._import(e,t)}})}_import(e,t){return s(this,null,function*(){if(null==t)return null;let i=yield this._v1Import(e,t);return i?i:(yield this._v0Import(e,t))||null})}_v1Import(e,t){return s(this,null,function*(){var i,n;let r=this.parser.json;if(!((null==(i=r.extensionsUsed)?void 0:i.indexOf("VRMC_vrm"))!==-1))return null;let o=null==(n=r.extensions)?void 0:n.VRMC_vrm;if(!o)return null;let s=o.specVersion;if(!T.has(s))return console.warn(`VRMFirstPersonLoaderPlugin: Unknown VRMC_vrm specVersion "${s}"`),null;let a=o.firstPerson,l=[];return Array.from((yield d(e)).entries()).forEach(([e,t])=>{var i,n;let r=null==(i=null==a?void 0:a.meshAnnotations)?void 0:i.find(t=>t.node===e);l.push({meshes:t,type:null!=(n=null==r?void 0:r.type)?n:"auto"})}),new w(t,l)})}_v0Import(e,t){return s(this,null,function*(){var i;let n=this.parser.json,r=null==(i=n.extensions)?void 0:i.VRM;if(!r)return null;let o=r.firstPerson;if(!o)return null;let s=[];return Array.from((yield d(e)).entries()).forEach(([e,t])=>{let i=n.nodes[e],r=o.meshAnnotations?o.meshAnnotations.find(e=>e.mesh===i.mesh):void 0;s.push({meshes:t,type:this._convertV0FlagToV1Type(null==r?void 0:r.firstPersonFlag)})}),new w(t,s)})}_convertV0FlagToV1Type(e){return"FirstPersonOnly"===e?"firstPersonOnly":"ThirdPersonOnly"===e?"thirdPersonOnly":"Both"===e?"both":"auto"}},R=new n.Pa4,E=new n.Pa4,S=new n._fP,A=class extends n.ZAu{constructor(e){super(),this.vrmHumanoid=e,this._boneAxesMap=new Map,Object.values(e.humanBones).forEach(e=>{let t=new n.y8_(1);t.matrixAutoUpdate=!1,t.material.depthTest=!1,t.material.depthWrite=!1,this.add(t),this._boneAxesMap.set(e,t)})}dispose(){Array.from(this._boneAxesMap.values()).forEach(e=>{e.geometry.dispose(),e.material.dispose()})}updateMatrixWorld(e){Array.from(this._boneAxesMap.entries()).forEach(([e,t])=>{e.node.updateWorldMatrix(!0,!1),e.node.matrixWorld.decompose(R,S,E);let i=R.set(.1,.1,.1).divide(E);t.matrix.copy(e.node.matrixWorld).scale(i)}),super.updateMatrixWorld(e)}},L=["hips","spine","chest","upperChest","neck","head","leftEye","rightEye","jaw","leftUpperLeg","leftLowerLeg","leftFoot","leftToes","rightUpperLeg","rightLowerLeg","rightFoot","rightToes","leftShoulder","leftUpperArm","leftLowerArm","leftHand","rightShoulder","rightUpperArm","rightLowerArm","rightHand","leftThumbMetacarpal","leftThumbProximal","leftThumbDistal","leftIndexProximal","leftIndexIntermediate","leftIndexDistal","leftMiddleProximal","leftMiddleIntermediate","leftMiddleDistal","leftRingProximal","leftRingIntermediate","leftRingDistal","leftLittleProximal","leftLittleIntermediate","leftLittleDistal","rightThumbMetacarpal","rightThumbProximal","rightThumbDistal","rightIndexProximal","rightIndexIntermediate","rightIndexDistal","rightMiddleProximal","rightMiddleIntermediate","rightMiddleDistal","rightRingProximal","rightRingIntermediate","rightRingDistal","rightLittleProximal","rightLittleIntermediate","rightLittleDistal"],b={hips:null,spine:"hips",chest:"spine",upperChest:"chest",neck:"upperChest",head:"neck",leftEye:"head",rightEye:"head",jaw:"head",leftUpperLeg:"hips",leftLowerLeg:"leftUpperLeg",leftFoot:"leftLowerLeg",leftToes:"leftFoot",rightUpperLeg:"hips",rightLowerLeg:"rightUpperLeg",rightFoot:"rightLowerLeg",rightToes:"rightFoot",leftShoulder:"upperChest",leftUpperArm:"leftShoulder",leftLowerArm:"leftUpperArm",leftHand:"leftLowerArm",rightShoulder:"upperChest",rightUpperArm:"rightShoulder",rightLowerArm:"rightUpperArm",rightHand:"rightLowerArm",leftThumbMetacarpal:"leftHand",leftThumbProximal:"leftThumbMetacarpal",leftThumbDistal:"leftThumbProximal",leftIndexProximal:"leftHand",leftIndexIntermediate:"leftIndexProximal",leftIndexDistal:"leftIndexIntermediate",leftMiddleProximal:"leftHand",leftMiddleIntermediate:"leftMiddleProximal",leftMiddleDistal:"leftMiddleIntermediate",leftRingProximal:"leftHand",leftRingIntermediate:"leftRingProximal",leftRingDistal:"leftRingIntermediate",leftLittleProximal:"leftHand",leftLittleIntermediate:"leftLittleProximal",leftLittleDistal:"leftLittleIntermediate",rightThumbMetacarpal:"rightHand",rightThumbProximal:"rightThumbMetacarpal",rightThumbDistal:"rightThumbProximal",rightIndexProximal:"rightHand",rightIndexIntermediate:"rightIndexProximal",rightIndexDistal:"rightIndexIntermediate",rightMiddleProximal:"rightHand",rightMiddleIntermediate:"rightMiddleProximal",rightMiddleDistal:"rightMiddleIntermediate",rightRingProximal:"rightHand",rightRingIntermediate:"rightRingProximal",rightRingDistal:"rightRingIntermediate",rightLittleProximal:"rightHand",rightLittleIntermediate:"rightLittleProximal",rightLittleDistal:"rightLittleIntermediate"};function I(e){return e.invert?e.invert():e.inverse(),e}var U=new n.Pa4,O=new n._fP,C=class{constructor(e){this.humanBones=e,this.restPose=this.getAbsolutePose()}getAbsolutePose(){let e={};return Object.keys(this.humanBones).forEach(t=>{let i=this.getBoneNode(t);i&&(U.copy(i.position),O.copy(i.quaternion),e[t]={position:U.toArray(),rotation:O.toArray()})}),e}getPose(){let e={};return Object.keys(this.humanBones).forEach(t=>{let i=this.getBoneNode(t);if(!i)return;U.set(0,0,0),O.identity();let n=this.restPose[t];(null==n?void 0:n.position)&&U.fromArray(n.position).negate(),(null==n?void 0:n.rotation)&&I(O.fromArray(n.rotation)),U.add(i.position),O.premultiply(i.quaternion),e[t]={position:U.toArray(),rotation:O.toArray()}}),e}setPose(e){Object.entries(e).forEach(([e,t])=>{let i=this.getBoneNode(e);if(!i)return;let n=this.restPose[e];n&&((null==t?void 0:t.position)&&(i.position.fromArray(t.position),n.position&&i.position.add(U.fromArray(n.position))),(null==t?void 0:t.rotation)&&(i.quaternion.fromArray(t.rotation),n.rotation&&i.quaternion.multiply(O.fromArray(n.rotation))))})}resetPose(){Object.entries(this.restPose).forEach(([e,t])=>{let i=this.getBoneNode(e);i&&((null==t?void 0:t.position)&&i.position.fromArray(t.position),(null==t?void 0:t.rotation)&&i.quaternion.fromArray(t.rotation))})}getBone(e){var t;return null!=(t=this.humanBones[e])?t:void 0}getBoneNode(e){var t,i;return null!=(i=null==(t=this.humanBones[e])?void 0:t.node)?i:null}},N=new n.Pa4,D=new n._fP,V=new n.Pa4,F=class e extends C{static _setupTransforms(e){let t=new n.Tme;t.name="VRMHumanoidRig";let i={},r={},o={},s={};L.forEach(t=>{var a;let l=e.getBoneNode(t);if(l){let e=new n.Pa4,u=new n._fP;l.updateWorldMatrix(!0,!1),l.matrixWorld.decompose(e,u,N),i[t]=e,r[t]=u,o[t]=l.quaternion.clone();let d=new n._fP;null==(a=l.parent)||a.matrixWorld.decompose(N,d,N),s[t]=d}});let a={};return L.forEach(r=>{var o;let s=e.getBoneNode(r);if(s){let e;let l=i[r],u=r;for(;null==e&&null!=(u=b[u]);)e=i[u];let d=new n.Tme;d.name="Normalized_"+s.name,(u?null==(o=a[u])?void 0:o.node:t).add(d),d.position.copy(l),e&&d.position.sub(e),a[r]={node:d}}}),{rigBones:a,root:t,parentWorldRotations:s,boneRotations:o}}constructor(t){let{rigBones:i,root:n,parentWorldRotations:r,boneRotations:o}=e._setupTransforms(t);super(i),this.original=t,this.root=n,this._parentWorldRotations=r,this._boneRotations=o}update(){L.forEach(e=>{let t=this.original.getBoneNode(e);if(null!=t){let i=this.getBoneNode(e),n=this._parentWorldRotations[e],r=D.copy(n).invert(),o=this._boneRotations[e];if(t.quaternion.copy(i.quaternion).multiply(n).premultiply(r).multiply(o),"hips"===e){let e=i.getWorldPosition(V);t.parent.updateWorldMatrix(!0,!1);let n=t.parent.matrixWorld,r=e.applyMatrix4(n.invert());t.position.copy(r)}}})}},B=class e{get restPose(){return console.warn("VRMHumanoid: restPose is deprecated. Use either rawRestPose or normalizedRestPose instead."),this.rawRestPose}get rawRestPose(){return this._rawHumanBones.restPose}get normalizedRestPose(){return this._normalizedHumanBones.restPose}get humanBones(){return this._rawHumanBones.humanBones}get rawHumanBones(){return this._rawHumanBones.humanBones}get normalizedHumanBones(){return this._normalizedHumanBones.humanBones}get normalizedHumanBonesRoot(){return this._normalizedHumanBones.root}constructor(e,t){var i;this.autoUpdateHumanBones=null==(i=null==t?void 0:t.autoUpdateHumanBones)||i,this._rawHumanBones=new C(e),this._normalizedHumanBones=new F(this._rawHumanBones)}copy(e){return this.autoUpdateHumanBones=e.autoUpdateHumanBones,this._rawHumanBones=new C(e.humanBones),this._normalizedHumanBones=new F(this._rawHumanBones),this}clone(){return new e(this.humanBones,{autoUpdateHumanBones:this.autoUpdateHumanBones}).copy(this)}getAbsolutePose(){return console.warn("VRMHumanoid: getAbsolutePose() is deprecated. Use either getRawAbsolutePose() or getNormalizedAbsolutePose() instead."),this.getRawAbsolutePose()}getRawAbsolutePose(){return this._rawHumanBones.getAbsolutePose()}getNormalizedAbsolutePose(){return this._normalizedHumanBones.getAbsolutePose()}getPose(){return console.warn("VRMHumanoid: getPose() is deprecated. Use either getRawPose() or getNormalizedPose() instead."),this.getRawPose()}getRawPose(){return this._rawHumanBones.getPose()}getNormalizedPose(){return this._normalizedHumanBones.getPose()}setPose(e){return console.warn("VRMHumanoid: setPose() is deprecated. Use either setRawPose() or setNormalizedPose() instead."),this.setRawPose(e)}setRawPose(e){return this._rawHumanBones.setPose(e)}setNormalizedPose(e){return this._normalizedHumanBones.setPose(e)}resetPose(){return console.warn("VRMHumanoid: resetPose() is deprecated. Use either resetRawPose() or resetNormalizedPose() instead."),this.resetRawPose()}resetRawPose(){return this._rawHumanBones.resetPose()}resetNormalizedPose(){return this._normalizedHumanBones.resetPose()}getBone(e){return console.warn("VRMHumanoid: getBone() is deprecated. Use either getRawBone() or getNormalizedBone() instead."),this.getRawBone(e)}getRawBone(e){return this._rawHumanBones.getBone(e)}getNormalizedBone(e){return this._normalizedHumanBones.getBone(e)}getBoneNode(e){return console.warn("VRMHumanoid: getBoneNode() is deprecated. Use either getRawBoneNode() or getNormalizedBoneNode() instead."),this.getRawBoneNode(e)}getRawBoneNode(e){return this._rawHumanBones.getBoneNode(e)}getNormalizedBoneNode(e){return this._normalizedHumanBones.getBoneNode(e)}update(){this.autoUpdateHumanBones&&this._normalizedHumanBones.update()}},H={Hips:"hips",Spine:"spine",Head:"head",LeftUpperLeg:"leftUpperLeg",LeftLowerLeg:"leftLowerLeg",LeftFoot:"leftFoot",RightUpperLeg:"rightUpperLeg",RightLowerLeg:"rightLowerLeg",RightFoot:"rightFoot",LeftUpperArm:"leftUpperArm",LeftLowerArm:"leftLowerArm",LeftHand:"leftHand",RightUpperArm:"rightUpperArm",RightLowerArm:"rightLowerArm",RightHand:"rightHand"},k=new Set(["1.0","1.0-beta"]),W={leftThumbProximal:"leftThumbMetacarpal",leftThumbIntermediate:"leftThumbProximal",rightThumbProximal:"rightThumbMetacarpal",rightThumbIntermediate:"rightThumbProximal"},z=class{get name(){return"VRMHumanoidLoaderPlugin"}constructor(e,t){this.parser=e,this.helperRoot=null==t?void 0:t.helperRoot,this.autoUpdateHumanBones=null==t?void 0:t.autoUpdateHumanBones}afterRoot(e){return s(this,null,function*(){e.userData.vrmHumanoid=yield this._import(e)})}_import(e){return s(this,null,function*(){let t=yield this._v1Import(e);return t?t:(yield this._v0Import(e))||null})}_v1Import(e){return s(this,null,function*(){var t,i;let n=this.parser.json;if(!((null==(t=n.extensionsUsed)?void 0:t.indexOf("VRMC_vrm"))!==-1))return null;let r=null==(i=n.extensions)?void 0:i.VRMC_vrm;if(!r)return null;let o=r.specVersion;if(!k.has(o))return console.warn(`VRMHumanoidLoaderPlugin: Unknown VRMC_vrm specVersion "${o}"`),null;let a=r.humanoid;if(!a)return null;let l=null!=a.humanBones.leftThumbIntermediate||null!=a.humanBones.rightThumbIntermediate,u={};null!=a.humanBones&&(yield Promise.all(Object.entries(a.humanBones).map(e=>s(this,[e],function*([e,t]){let i=e,n=t.node;if(l){let e=W[i];null!=e&&(i=e)}let r=yield this.parser.getDependency("node",n);if(null==r){console.warn(`A glTF node bound to the humanoid bone ${i} (index = ${n}) does not exist`);return}u[i]={node:r}}))));let d=new B(this._ensureRequiredBonesExist(u),{autoUpdateHumanBones:this.autoUpdateHumanBones});if(e.scene.add(d.normalizedHumanBonesRoot),this.helperRoot){let e=new A(d);this.helperRoot.add(e),e.renderOrder=this.helperRoot.renderOrder}return d})}_v0Import(e){return s(this,null,function*(){var t;let i=null==(t=this.parser.json.extensions)?void 0:t.VRM;if(!i)return null;let n=i.humanoid;if(!n)return null;let r={};null!=n.humanBones&&(yield Promise.all(n.humanBones.map(e=>s(this,null,function*(){let t=e.bone,i=e.node;if(null==t||null==i)return;let n=yield this.parser.getDependency("node",i);if(null==n){console.warn(`A glTF node bound to the humanoid bone ${t} (index = ${i}) does not exist`);return}let o=W[t],s=null!=o?o:t;if(null!=r[s]){console.warn(`Multiple bone entries for ${s} detected (index = ${i}), ignoring duplicated entries.`);return}r[s]={node:n}}))));let o=new B(this._ensureRequiredBonesExist(r),{autoUpdateHumanBones:this.autoUpdateHumanBones});if(e.scene.add(o.normalizedHumanBonesRoot),this.helperRoot){let e=new A(o);this.helperRoot.add(e),e.renderOrder=this.helperRoot.renderOrder}return o})}_ensureRequiredBonesExist(e){let t=Object.values(H).filter(t=>null==e[t]);if(t.length>0)throw Error(`VRMHumanoidLoaderPlugin: These humanoid bones are required but not exist: ${t.join(", ")}`);return e}},X=class extends n.u9r{constructor(){super(),this._currentTheta=0,this._currentRadius=0,this.theta=0,this.radius=0,this._currentTheta=0,this._currentRadius=0,this._attrPos=new n.TlE(new Float32Array(195),3),this.setAttribute("position",this._attrPos),this._attrIndex=new n.TlE(new Uint16Array(189),1),this.setIndex(this._attrIndex),this._buildIndex(),this.update()}update(){let e=!1;this._currentTheta!==this.theta&&(this._currentTheta=this.theta,e=!0),this._currentRadius!==this.radius&&(this._currentRadius=this.radius,e=!0),e&&this._buildPosition()}_buildPosition(){this._attrPos.setXYZ(0,0,0,0);for(let e=0;e<64;e++){let t=e/63*this._currentTheta;this._attrPos.setXYZ(e+1,this._currentRadius*Math.sin(t),0,this._currentRadius*Math.cos(t))}this._attrPos.needsUpdate=!0}_buildIndex(){for(let e=0;e<63;e++)this._attrIndex.setXYZ(3*e,0,e+1,e+2);this._attrIndex.needsUpdate=!0}},G=class extends n.u9r{constructor(){super(),this.radius=0,this._currentRadius=0,this.tail=new n.Pa4,this._currentTail=new n.Pa4,this._attrPos=new n.TlE(new Float32Array(294),3),this.setAttribute("position",this._attrPos),this._attrIndex=new n.TlE(new Uint16Array(194),1),this.setIndex(this._attrIndex),this._buildIndex(),this.update()}update(){let e=!1;this._currentRadius!==this.radius&&(this._currentRadius=this.radius,e=!0),this._currentTail.equals(this.tail)||(this._currentTail.copy(this.tail),e=!0),e&&this._buildPosition()}_buildPosition(){for(let e=0;e<32;e++){let t=e/16*Math.PI;this._attrPos.setXYZ(e,Math.cos(t),Math.sin(t),0),this._attrPos.setXYZ(32+e,0,Math.cos(t),Math.sin(t)),this._attrPos.setXYZ(64+e,Math.sin(t),0,Math.cos(t))}this.scale(this._currentRadius,this._currentRadius,this._currentRadius),this.translate(this._currentTail.x,this._currentTail.y,this._currentTail.z),this._attrPos.setXYZ(96,0,0,0),this._attrPos.setXYZ(97,this._currentTail.x,this._currentTail.y,this._currentTail.z),this._attrPos.needsUpdate=!0}_buildIndex(){for(let e=0;e<32;e++){let t=(e+1)%32;this._attrIndex.setXY(2*e,e,t),this._attrIndex.setXY(64+2*e,32+e,32+t),this._attrIndex.setXY(128+2*e,64+e,64+t)}this._attrIndex.setXY(192,96,97),this._attrIndex.needsUpdate=!0}},Y=new n._fP,j=new n._fP,q=new n.Pa4,Q=new n.Pa4,$=Math.sqrt(2)/2,Z=new n._fP(0,0,-$,$),J=new n.Pa4(0,1,0),K=class extends n.ZAu{constructor(e){super(),this.matrixAutoUpdate=!1,this.vrmLookAt=e;{let e=new X;e.radius=.5;let t=new n.vBJ({color:65280,transparent:!0,opacity:.5,side:n.ehD,depthTest:!1,depthWrite:!1});this._meshPitch=new n.Kj0(e,t),this.add(this._meshPitch)}{let e=new X;e.radius=.5;let t=new n.vBJ({color:16711680,transparent:!0,opacity:.5,side:n.ehD,depthTest:!1,depthWrite:!1});this._meshYaw=new n.Kj0(e,t),this.add(this._meshYaw)}{let e=new G;e.radius=.1;let t=new n.nls({color:16777215,depthTest:!1,depthWrite:!1});this._lineTarget=new n.ejS(e,t),this._lineTarget.frustumCulled=!1,this.add(this._lineTarget)}}dispose(){this._meshYaw.geometry.dispose(),this._meshYaw.material.dispose(),this._meshPitch.geometry.dispose(),this._meshPitch.material.dispose(),this._lineTarget.geometry.dispose(),this._lineTarget.material.dispose()}updateMatrixWorld(e){let t=n.M8C.DEG2RAD*this.vrmLookAt.yaw;this._meshYaw.geometry.theta=t,this._meshYaw.geometry.update();let i=n.M8C.DEG2RAD*this.vrmLookAt.pitch;this._meshPitch.geometry.theta=i,this._meshPitch.geometry.update(),this.vrmLookAt.getLookAtWorldPosition(q),this.vrmLookAt.getLookAtWorldQuaternion(Y),Y.multiply(this.vrmLookAt.getFaceFrontQuaternion(j)),this._meshYaw.position.copy(q),this._meshYaw.quaternion.copy(Y),this._meshPitch.position.copy(q),this._meshPitch.quaternion.copy(Y),this._meshPitch.quaternion.multiply(j.setFromAxisAngle(J,t)),this._meshPitch.quaternion.multiply(Z);let{target:r,autoUpdate:o}=this.vrmLookAt;null!=r&&o&&(r.getWorldPosition(Q).sub(q),this._lineTarget.geometry.tail.copy(Q),this._lineTarget.geometry.update(),this._lineTarget.position.copy(q)),super.updateMatrixWorld(e)}},ee=new n.Pa4,et=new n.Pa4;function ei(e,t){return e.matrixWorld.decompose(ee,t,et),t}function en(e){return[Math.atan2(-e.z,e.x),Math.atan2(e.y,Math.sqrt(e.x*e.x+e.z*e.z))]}function er(e){return e-2*Math.PI*Math.round(e/2/Math.PI)}var eo=new n.Pa4(0,0,1),es=new n.Pa4,ea=new n.Pa4,el=new n.Pa4,eu=new n._fP,ed=new n._fP,eh=new n._fP,ep=new n._fP,ec=new n.USm,em=class e{constructor(e,t){this.offsetFromHeadBone=new n.Pa4,this.autoUpdate=!0,this.faceFront=new n.Pa4(0,0,1),this.humanoid=e,this.applier=t,this._yaw=0,this._pitch=0,this._needsUpdate=!0,this._restHeadWorldQuaternion=this.getLookAtWorldQuaternion(new n._fP)}get yaw(){return this._yaw}set yaw(e){this._yaw=e,this._needsUpdate=!0}get pitch(){return this._pitch}set pitch(e){this._pitch=e,this._needsUpdate=!0}get euler(){return console.warn("VRMLookAt: euler is deprecated. use getEuler() instead."),this.getEuler(new n.USm)}getEuler(e){return e.set(n.M8C.DEG2RAD*this._pitch,n.M8C.DEG2RAD*this._yaw,0,"YXZ")}copy(e){if(this.humanoid!==e.humanoid)throw Error("VRMLookAt: humanoid must be same in order to copy");return this.offsetFromHeadBone.copy(e.offsetFromHeadBone),this.applier=e.applier,this.autoUpdate=e.autoUpdate,this.target=e.target,this.faceFront.copy(e.faceFront),this}clone(){return new e(this.humanoid,this.applier).copy(this)}reset(){this._yaw=0,this._pitch=0,this._needsUpdate=!0}getLookAtWorldPosition(e){let t=this.humanoid.getRawBoneNode("head");return e.copy(this.offsetFromHeadBone).applyMatrix4(t.matrixWorld)}getLookAtWorldQuaternion(e){return ei(this.humanoid.getRawBoneNode("head"),e)}getFaceFrontQuaternion(e){if(.01>this.faceFront.distanceToSquared(eo))return e.copy(this._restHeadWorldQuaternion).invert();let[t,i]=en(this.faceFront);return ec.set(0,.5*Math.PI+t,i,"YZX"),e.setFromEuler(ec).premultiply(ep.copy(this._restHeadWorldQuaternion).invert())}getLookAtWorldDirection(e){return this.getLookAtWorldQuaternion(ed),this.getFaceFrontQuaternion(eh),e.copy(eo).applyQuaternion(ed).applyQuaternion(eh).applyEuler(this.getEuler(ec))}lookAt(e){let t=eu.copy(this._restHeadWorldQuaternion).multiply(I(this.getLookAtWorldQuaternion(ed))),i=this.getLookAtWorldPosition(ea),r=el.copy(e).sub(i).applyQuaternion(t).normalize(),[o,s]=en(this.faceFront),[a,l]=en(r),u=er(a-o),d=er(s-l);this._yaw=n.M8C.RAD2DEG*u,this._pitch=n.M8C.RAD2DEG*d,this._needsUpdate=!0}update(e){null!=this.target&&this.autoUpdate&&this.lookAt(this.target.getWorldPosition(es)),this._needsUpdate&&(this._needsUpdate=!1,this.applier.applyYawPitch(this._yaw,this._pitch))}};em.EULER_ORDER="YXZ";var ef=new n.Pa4(0,0,1),eg=new n._fP,e_=new n._fP,ev=new n.USm(0,0,0,"YXZ"),eM=class{constructor(e,t,i,r,o){this.humanoid=e,this.rangeMapHorizontalInner=t,this.rangeMapHorizontalOuter=i,this.rangeMapVerticalDown=r,this.rangeMapVerticalUp=o,this.faceFront=new n.Pa4(0,0,1),this._restQuatLeftEye=new n._fP,this._restQuatRightEye=new n._fP,this._restLeftEyeParentWorldQuat=new n._fP,this._restRightEyeParentWorldQuat=new n._fP;let s=this.humanoid.getRawBoneNode("leftEye"),a=this.humanoid.getRawBoneNode("rightEye");s&&(this._restQuatLeftEye.copy(s.quaternion),ei(s.parent,this._restLeftEyeParentWorldQuat)),a&&(this._restQuatRightEye.copy(a.quaternion),ei(a.parent,this._restRightEyeParentWorldQuat))}applyYawPitch(e,t){let i=this.humanoid.getRawBoneNode("leftEye"),r=this.humanoid.getRawBoneNode("rightEye"),o=this.humanoid.getNormalizedBoneNode("leftEye"),s=this.humanoid.getNormalizedBoneNode("rightEye");i&&(t<0?ev.x=-n.M8C.DEG2RAD*this.rangeMapVerticalDown.map(-t):ev.x=n.M8C.DEG2RAD*this.rangeMapVerticalUp.map(t),e<0?ev.y=-n.M8C.DEG2RAD*this.rangeMapHorizontalInner.map(-e):ev.y=n.M8C.DEG2RAD*this.rangeMapHorizontalOuter.map(e),eg.setFromEuler(ev),this._getWorldFaceFrontQuat(e_),o.quaternion.copy(e_).multiply(eg).multiply(e_.invert()),eg.copy(this._restLeftEyeParentWorldQuat),i.quaternion.copy(o.quaternion).multiply(eg).premultiply(eg.invert()).multiply(this._restQuatLeftEye)),r&&(t<0?ev.x=-n.M8C.DEG2RAD*this.rangeMapVerticalDown.map(-t):ev.x=n.M8C.DEG2RAD*this.rangeMapVerticalUp.map(t),e<0?ev.y=-n.M8C.DEG2RAD*this.rangeMapHorizontalOuter.map(-e):ev.y=n.M8C.DEG2RAD*this.rangeMapHorizontalInner.map(e),eg.setFromEuler(ev),this._getWorldFaceFrontQuat(e_),s.quaternion.copy(e_).multiply(eg).multiply(e_.invert()),eg.copy(this._restRightEyeParentWorldQuat),r.quaternion.copy(s.quaternion).multiply(eg).premultiply(eg.invert()).multiply(this._restQuatRightEye))}lookAt(e){console.warn("VRMLookAtBoneApplier: lookAt() is deprecated. use apply() instead.");let t=n.M8C.RAD2DEG*e.y,i=n.M8C.RAD2DEG*e.x;this.applyYawPitch(t,i)}_getWorldFaceFrontQuat(e){if(.01>this.faceFront.distanceToSquared(ef))return e.identity();let[t,i]=en(this.faceFront);return ev.set(0,.5*Math.PI+t,i,"YZX"),e.setFromEuler(ev)}};eM.type="bone";var ex=class{constructor(e,t,i,n,r){this.expressions=e,this.rangeMapHorizontalInner=t,this.rangeMapHorizontalOuter=i,this.rangeMapVerticalDown=n,this.rangeMapVerticalUp=r}applyYawPitch(e,t){t<0?(this.expressions.setValue("lookDown",0),this.expressions.setValue("lookUp",this.rangeMapVerticalUp.map(-t))):(this.expressions.setValue("lookUp",0),this.expressions.setValue("lookDown",this.rangeMapVerticalDown.map(t))),e<0?(this.expressions.setValue("lookLeft",0),this.expressions.setValue("lookRight",this.rangeMapHorizontalOuter.map(-e))):(this.expressions.setValue("lookRight",0),this.expressions.setValue("lookLeft",this.rangeMapHorizontalOuter.map(e)))}lookAt(e){console.warn("VRMLookAtBoneApplier: lookAt() is deprecated. use apply() instead.");let t=n.M8C.RAD2DEG*e.y,i=n.M8C.RAD2DEG*e.x;this.applyYawPitch(t,i)}};ex.type="expression";var ey=class{constructor(e,t){this.inputMaxValue=e,this.outputScale=t}map(e){return this.outputScale*p(e/this.inputMaxValue)}},ew=new Set(["1.0","1.0-beta"]),eT=class{get name(){return"VRMLookAtLoaderPlugin"}constructor(e,t){this.parser=e,this.helperRoot=null==t?void 0:t.helperRoot}afterRoot(e){return s(this,null,function*(){let t=e.userData.vrmHumanoid;if(null===t)return;if(void 0===t)throw Error("VRMLookAtLoaderPlugin: vrmHumanoid is undefined. VRMHumanoidLoaderPlugin have to be used first");let i=e.userData.vrmExpressionManager;if(null!==i){if(void 0===i)throw Error("VRMLookAtLoaderPlugin: vrmExpressionManager is undefined. VRMExpressionLoaderPlugin have to be used first");e.userData.vrmLookAt=yield this._import(e,t,i)}})}_import(e,t,i){return s(this,null,function*(){if(null==t||null==i)return null;let n=yield this._v1Import(e,t,i);return n?n:(yield this._v0Import(e,t,i))||null})}_v1Import(e,t,i){return s(this,null,function*(){var e,n,r;let o;let s=this.parser.json;if(!((null==(e=s.extensionsUsed)?void 0:e.indexOf("VRMC_vrm"))!==-1))return null;let a=null==(n=s.extensions)?void 0:n.VRMC_vrm;if(!a)return null;let l=a.specVersion;if(!ew.has(l))return console.warn(`VRMLookAtLoaderPlugin: Unknown VRMC_vrm specVersion "${l}"`),null;let u=a.lookAt;if(!u)return null;let d="expression"===u.type?1:10,h=this._v1ImportRangeMap(u.rangeMapHorizontalInner,d),p=this._v1ImportRangeMap(u.rangeMapHorizontalOuter,d),c=this._v1ImportRangeMap(u.rangeMapVerticalDown,d),m=this._v1ImportRangeMap(u.rangeMapVerticalUp,d);o="expression"===u.type?new ex(i,h,p,c,m):new eM(t,h,p,c,m);let f=this._importLookAt(t,o);return f.offsetFromHeadBone.fromArray(null!=(r=u.offsetFromHeadBone)?r:[0,.06,0]),f})}_v1ImportRangeMap(e,t){var i,n;let r=null!=(i=null==e?void 0:e.inputMaxValue)?i:90,o=null!=(n=null==e?void 0:e.outputScale)?n:t;return r<.01&&(console.warn("VRMLookAtLoaderPlugin: inputMaxValue of a range map is too small. Consider reviewing the range map!"),r=.01),new ey(r,o)}_v0Import(e,t,i){return s(this,null,function*(){var e,n,r,o;let s;let a=null==(e=this.parser.json.extensions)?void 0:e.VRM;if(!a)return null;let l=a.firstPerson;if(!l)return null;let u="BlendShape"===l.lookAtTypeName?1:10,d=this._v0ImportDegreeMap(l.lookAtHorizontalInner,u),h=this._v0ImportDegreeMap(l.lookAtHorizontalOuter,u),p=this._v0ImportDegreeMap(l.lookAtVerticalDown,u),c=this._v0ImportDegreeMap(l.lookAtVerticalUp,u);s="BlendShape"===l.lookAtTypeName?new ex(i,d,h,p,c):new eM(t,d,h,p,c);let m=this._importLookAt(t,s);return l.firstPersonBoneOffset?m.offsetFromHeadBone.set(null!=(n=l.firstPersonBoneOffset.x)?n:0,null!=(r=l.firstPersonBoneOffset.y)?r:.06,-(null!=(o=l.firstPersonBoneOffset.z)?o:0)):m.offsetFromHeadBone.set(0,.06,0),m.faceFront.set(0,0,-1),s instanceof eM&&s.faceFront.set(0,0,-1),m})}_v0ImportDegreeMap(e,t){var i,n;"[0,0,0,1,1,1,1,0]"!==JSON.stringify(null==e?void 0:e.curve)&&console.warn("Curves of LookAtDegreeMap defined in VRM 0.0 are not supported");let r=null!=(i=null==e?void 0:e.xRange)?i:90,o=null!=(n=null==e?void 0:e.yRange)?n:t;return r<.01&&(console.warn("VRMLookAtLoaderPlugin: xRange of a degree map is too small. Consider reviewing the degree map!"),r=.01),new ey(r,o)}_importLookAt(e,t){let i=new em(e,t);if(this.helperRoot){let e=new K(i);this.helperRoot.add(e),e.renderOrder=this.helperRoot.renderOrder}return i}},eP=new Set(["1.0","1.0-beta"]),eR=class{get name(){return"VRMMetaLoaderPlugin"}constructor(e,t){var i,n,r;this.parser=e,this.needThumbnailImage=null!=(i=null==t?void 0:t.needThumbnailImage)&&i,this.acceptLicenseUrls=null!=(n=null==t?void 0:t.acceptLicenseUrls)?n:["https://vrm.dev/licenses/1.0/"],this.acceptV0Meta=null==(r=null==t?void 0:t.acceptV0Meta)||r}afterRoot(e){return s(this,null,function*(){e.userData.vrmMeta=yield this._import(e)})}_import(e){return s(this,null,function*(){let t=yield this._v1Import(e);if(null!=t)return t;let i=yield this._v0Import(e);return null!=i?i:null})}_v1Import(e){return s(this,null,function*(){var e,t,i;let n;let r=this.parser.json;if(!((null==(e=r.extensionsUsed)?void 0:e.indexOf("VRMC_vrm"))!==-1))return null;let o=null==(t=r.extensions)?void 0:t.VRMC_vrm;if(null==o)return null;let s=o.specVersion;if(!eP.has(s))return console.warn(`VRMMetaLoaderPlugin: Unknown VRMC_vrm specVersion "${s}"`),null;let a=o.meta;if(!a)return null;let l=a.licenseUrl;if(!new Set(this.acceptLicenseUrls).has(l))throw Error(`VRMMetaLoaderPlugin: The license url "${l}" is not accepted`);return this.needThumbnailImage&&null!=a.thumbnailImage&&(n=null!=(i=yield this._extractGLTFImage(a.thumbnailImage))?i:void 0),{metaVersion:"1",name:a.name,version:a.version,authors:a.authors,copyrightInformation:a.copyrightInformation,contactInformation:a.contactInformation,references:a.references,thirdPartyLicenses:a.thirdPartyLicenses,thumbnailImage:n,licenseUrl:a.licenseUrl,avatarPermission:a.avatarPermission,allowExcessivelyViolentUsage:a.allowExcessivelyViolentUsage,allowExcessivelySexualUsage:a.allowExcessivelySexualUsage,commercialUsage:a.commercialUsage,allowPoliticalOrReligiousUsage:a.allowPoliticalOrReligiousUsage,allowAntisocialOrHateUsage:a.allowAntisocialOrHateUsage,creditNotation:a.creditNotation,allowRedistribution:a.allowRedistribution,modification:a.modification,otherLicenseUrl:a.otherLicenseUrl}})}_v0Import(e){return s(this,null,function*(){var e;let t;let i=null==(e=this.parser.json.extensions)?void 0:e.VRM;if(!i)return null;let n=i.meta;if(!n)return null;if(!this.acceptV0Meta)throw Error("VRMMetaLoaderPlugin: Attempted to load VRM0.0 meta but acceptV0Meta is false");return this.needThumbnailImage&&null!=n.texture&&-1!==n.texture&&(t=yield this.parser.getDependency("texture",n.texture)),{metaVersion:"0",allowedUserName:n.allowedUserName,author:n.author,commercialUssageName:n.commercialUssageName,contactInformation:n.contactInformation,licenseName:n.licenseName,otherLicenseUrl:n.otherLicenseUrl,otherPermissionUrl:n.otherPermissionUrl,reference:n.reference,sexualUssageName:n.sexualUssageName,texture:null!=t?t:void 0,title:n.title,version:n.version,violentUssageName:n.violentUssageName}})}_extractGLTFImage(e){return s(this,null,function*(){var t,i,r;let o=null==(t=this.parser.json.images)?void 0:t[e];if(null==o)return console.warn(`VRMMetaLoaderPlugin: Attempt to use images[${e}] of glTF as a thumbnail but the image doesn't exist`),null;let s=o.uri;if(null!=o.bufferView){let e=new Blob([(yield this.parser.getDependency("bufferView",o.bufferView))],{type:o.mimeType});s=URL.createObjectURL(e)}if(null==s)return console.warn(`VRMMetaLoaderPlugin: Attempt to use images[${e}] of glTF as a thumbnail but the image couldn't load properly`),null;let a=new n.S3k;return yield a.loadAsync((i=s,r=this.parser.options.path,"string"!=typeof i||""===i?"":(/^https?:\/\//i.test(r)&&/^\//.test(i)&&(r=r.replace(/(^https?:\/\/[^/]+).*/i,"$1")),/^(https?:)?\/\//i.test(i)||/^data:.*,.*$/i.test(i)||/^blob:.*$/i.test(i))?i:r+i)).catch(e=>(console.error(e),console.warn("VRMMetaLoaderPlugin: Failed to load a thumbnail image"),null))})}},eE=class{constructor(e){this.scene=e.scene,this.meta=e.meta,this.humanoid=e.humanoid,this.expressionManager=e.expressionManager,this.firstPerson=e.firstPerson,this.lookAt=e.lookAt}update(e){this.humanoid.update(),this.lookAt&&this.lookAt.update(e),this.expressionManager&&this.expressionManager.update()}},eS=class extends eE{constructor(e){super(e),this.materials=e.materials,this.springBoneManager=e.springBoneManager,this.nodeConstraintManager=e.nodeConstraintManager}update(e){super.update(e),this.nodeConstraintManager&&this.nodeConstraintManager.update(),this.springBoneManager&&this.springBoneManager.update(e),this.materials&&this.materials.forEach(t=>{t.update&&t.update(e)})}},eA=Object.defineProperty,eL=Object.getOwnPropertySymbols,eb=Object.prototype.hasOwnProperty,eI=Object.prototype.propertyIsEnumerable,eU=(e,t,i)=>t in e?eA(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,eO=(e,t)=>{for(var i in t||(t={}))eb.call(t,i)&&eU(e,i,t[i]);if(eL)for(var i of eL(t))eI.call(t,i)&&eU(e,i,t[i]);return e},eC=(e,t,i)=>new Promise((n,r)=>{var o=e=>{try{a(i.next(e))}catch(e){r(e)}},s=e=>{try{a(i.throw(e))}catch(e){r(e)}},a=e=>e.done?n(e.value):Promise.resolve(e.value).then(o,s);a((i=i.apply(e,t)).next())}),eN={"":3e3,srgb:3001},eD=class{get pending(){return Promise.all(this._pendings)}constructor(e,t){this._parser=e,this._materialParams=t,this._pendings=[]}assignPrimitive(e,t){null!=t&&(this._materialParams[e]=t)}assignColor(e,t,i){null!=t&&(this._materialParams[e]=new n.Ilk().fromArray(t),i&&this._materialParams[e].convertSRGBToLinear())}assignTexture(e,t,i){return eC(this,null,function*(){let r=eC(this,null,function*(){if(null!=t&&(yield this._parser.assignTexture(this._materialParams,e,t),i)){var r,o;r=this._materialParams[e],o="srgb",parseInt(n.UZH,10)>=152?r.colorSpace=o:r.encoding=eN[o]}});return this._pendings.push(r),r})}assignTextureByIndex(e,t,i){return eC(this,null,function*(){return this.assignTexture(e,null!=t?{index:t}:void 0,i)})}},eV={None:"none",ScreenCoordinates:"screenCoordinates"},eF={3e3:"",3001:"srgb"};function eB(e){return parseInt(n.UZH,10)>=152?e.colorSpace:eF[e.encoding]}var eH=class extends n.jyz{constructor(e={}){var t;super({vertexShader:"// #define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n  varying vec3 vNormal;\n#endif\n\n#include <common>\n\n// #include <uv_pars_vertex>\n#ifdef MTOON_USE_UV\n  varying vec2 vUv;\n\n  // COMPAT: pre-r151 uses a common uvTransform\n  #if THREE_VRM_THREE_REVISION < 151\n    uniform mat3 uvTransform;\n  #endif\n#endif\n\n// #include <uv2_pars_vertex>\n// COMAPT: pre-r151 uses uv2 for lightMap and aoMap\n#if THREE_VRM_THREE_REVISION < 151\n  #if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n    attribute vec2 uv2;\n    varying vec2 vUv2;\n    uniform mat3 uv2Transform;\n  #endif\n#endif\n\n// #include <displacementmap_pars_vertex>\n// #include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n#ifdef USE_OUTLINEWIDTHMULTIPLYTEXTURE\n  uniform sampler2D outlineWidthMultiplyTexture;\n  uniform mat3 outlineWidthMultiplyTextureUvTransform;\n#endif\n\nuniform float outlineWidthFactor;\n\nvoid main() {\n\n  // #include <uv_vertex>\n  #ifdef MTOON_USE_UV\n    // COMPAT: pre-r151 uses a common uvTransform\n    #if THREE_VRM_THREE_REVISION >= 151\n      vUv = uv;\n    #else\n      vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n    #endif\n  #endif\n\n  // #include <uv2_vertex>\n  // COMAPT: pre-r151 uses uv2 for lightMap and aoMap\n  #if THREE_VRM_THREE_REVISION < 151\n    #if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n      vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n    #endif\n  #endif\n\n  #include <color_vertex>\n\n  #include <beginnormal_vertex>\n  #include <morphnormal_vertex>\n  #include <skinbase_vertex>\n  #include <skinnormal_vertex>\n\n  // we need this to compute the outline properly\n  objectNormal = normalize( objectNormal );\n\n  #include <defaultnormal_vertex>\n\n  #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n    vNormal = normalize( transformedNormal );\n  #endif\n\n  #include <begin_vertex>\n\n  #include <morphtarget_vertex>\n  #include <skinning_vertex>\n  // #include <displacementmap_vertex>\n  #include <project_vertex>\n  #include <logdepthbuf_vertex>\n  #include <clipping_planes_vertex>\n\n  vViewPosition = - mvPosition.xyz;\n\n  #ifdef OUTLINE\n    float worldNormalLength = length( transformedNormal );\n    vec3 outlineOffset = outlineWidthFactor * worldNormalLength * objectNormal;\n\n    #ifdef USE_OUTLINEWIDTHMULTIPLYTEXTURE\n      vec2 outlineWidthMultiplyTextureUv = ( outlineWidthMultiplyTextureUvTransform * vec3( vUv, 1 ) ).xy;\n      float outlineTex = texture2D( outlineWidthMultiplyTexture, outlineWidthMultiplyTextureUv ).g;\n      outlineOffset *= outlineTex;\n    #endif\n\n    #ifdef OUTLINE_WIDTH_SCREEN\n      outlineOffset *= vViewPosition.z / projectionMatrix[ 1 ].y;\n    #endif\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( outlineOffset + transformed, 1.0 );\n\n    gl_Position.z += 1E-6 * gl_Position.w; // anti-artifact magic\n  #endif\n\n  #include <worldpos_vertex>\n  // #include <envmap_vertex>\n  #include <shadowmap_vertex>\n  #include <fog_vertex>\n\n}",fragmentShader:"// #define PHONG\n\nuniform vec3 litFactor;\n\nuniform float opacity;\n\nuniform vec3 shadeColorFactor;\n#ifdef USE_SHADEMULTIPLYTEXTURE\n  uniform sampler2D shadeMultiplyTexture;\n  uniform mat3 shadeMultiplyTextureUvTransform;\n#endif\n\nuniform float shadingShiftFactor;\nuniform float shadingToonyFactor;\n\n#ifdef USE_SHADINGSHIFTTEXTURE\n  uniform sampler2D shadingShiftTexture;\n  uniform mat3 shadingShiftTextureUvTransform;\n  uniform float shadingShiftTextureScale;\n#endif\n\nuniform float giEqualizationFactor;\n\nuniform vec3 parametricRimColorFactor;\n#ifdef USE_RIMMULTIPLYTEXTURE\n  uniform sampler2D rimMultiplyTexture;\n  uniform mat3 rimMultiplyTextureUvTransform;\n#endif\nuniform float rimLightingMixFactor;\nuniform float parametricRimFresnelPowerFactor;\nuniform float parametricRimLiftFactor;\n\n#ifdef USE_MATCAPTEXTURE\n  uniform vec3 matcapFactor;\n  uniform sampler2D matcapTexture;\n  uniform mat3 matcapTextureUvTransform;\n#endif\n\nuniform vec3 emissive;\nuniform float emissiveIntensity;\n\nuniform vec3 outlineColorFactor;\nuniform float outlineLightingMixFactor;\n\n#ifdef USE_UVANIMATIONMASKTEXTURE\n  uniform sampler2D uvAnimationMaskTexture;\n  uniform mat3 uvAnimationMaskTextureUvTransform;\n#endif\n\nuniform float uvAnimationScrollXOffset;\nuniform float uvAnimationScrollYOffset;\nuniform float uvAnimationRotationPhase;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n\n// #include <uv_pars_fragment>\n#if ( defined( MTOON_USE_UV ) && !defined( MTOON_UVS_VERTEX_ONLY ) )\n  varying vec2 vUv;\n#endif\n\n// #include <uv2_pars_fragment>\n// COMAPT: pre-r151 uses uv2 for lightMap and aoMap\n#if THREE_VRM_THREE_REVISION < 151\n  #if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n    varying vec2 vUv2;\n  #endif\n#endif\n\n#include <map_pars_fragment>\n\n#ifdef USE_MAP\n  uniform mat3 mapUvTransform;\n#endif\n\n// #include <alphamap_pars_fragment>\n\n#include <alphatest_pars_fragment>\n\n#include <aomap_pars_fragment>\n// #include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n\n#ifdef USE_EMISSIVEMAP\n  uniform mat3 emissiveMapUvTransform;\n#endif\n\n// #include <envmap_common_pars_fragment>\n// #include <envmap_pars_fragment>\n// #include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n\n// #include <bsdfs>\n// COMPAT: pre-r151 doesn't have BRDF_Lambert in <common>\n#if THREE_VRM_THREE_REVISION < 151\n  vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n    return RECIPROCAL_PI * diffuseColor;\n  }\n#endif\n\n#include <lights_pars_begin>\n\n#include <normal_pars_fragment>\n\n// #include <lights_phong_pars_fragment>\nvarying vec3 vViewPosition;\n\nstruct MToonMaterial {\n  vec3 diffuseColor;\n  vec3 shadeColor;\n  float shadingShift;\n};\n\nfloat linearstep( float a, float b, float t ) {\n  return clamp( ( t - a ) / ( b - a ), 0.0, 1.0 );\n}\n\n/**\n * Convert NdotL into toon shading factor using shadingShift and shadingToony\n */\nfloat getShading(\n  const in float dotNL,\n  const in float shadow,\n  const in float shadingShift\n) {\n  float shading = dotNL;\n  shading = shading + shadingShift;\n  shading = linearstep( -1.0 + shadingToonyFactor, 1.0 - shadingToonyFactor, shading );\n  shading *= shadow;\n  return shading;\n}\n\n/**\n * Mix diffuseColor and shadeColor using shading factor and light color\n */\nvec3 getDiffuse(\n  const in MToonMaterial material,\n  const in float shading,\n  in vec3 lightColor\n) {\n  #ifdef DEBUG_LITSHADERATE\n    return vec3( BRDF_Lambert( shading * lightColor ) );\n  #endif\n\n  vec3 col = lightColor * BRDF_Lambert( mix( material.shadeColor, material.diffuseColor, shading ) );\n\n  // The \"comment out if you want to PBR absolutely\" line\n  #ifdef V0_COMPAT_SHADE\n    col = min( col, material.diffuseColor );\n  #endif\n\n  return col;\n}\n\n// COMPAT: pre-r156 uses a struct GeometricContext\n#if THREE_VRM_THREE_REVISION >= 157\n  void RE_Direct_MToon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in MToonMaterial material, const in float shadow, inout ReflectedLight reflectedLight ) {\n    float dotNL = clamp( dot( geometryNormal, directLight.direction ), -1.0, 1.0 );\n    vec3 irradiance = directLight.color;\n\n    // directSpecular will be used for rim lighting, not an actual specular\n    reflectedLight.directSpecular += irradiance;\n\n    irradiance *= dotNL;\n\n    float shading = getShading( dotNL, shadow, material.shadingShift );\n\n    // toon shaded diffuse\n    reflectedLight.directDiffuse += getDiffuse( material, shading, directLight.color );\n  }\n\n  void RE_IndirectDiffuse_MToon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in MToonMaterial material, inout ReflectedLight reflectedLight ) {\n    // indirect diffuse will use diffuseColor, no shadeColor involved\n    reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n    // directSpecular will be used for rim lighting, not an actual specular\n    reflectedLight.directSpecular += irradiance;\n  }\n#else\n  void RE_Direct_MToon( const in IncidentLight directLight, const in GeometricContext geometry, const in MToonMaterial material, const in float shadow, inout ReflectedLight reflectedLight ) {\n    float dotNL = clamp( dot( geometry.normal, directLight.direction ), -1.0, 1.0 );\n    vec3 irradiance = directLight.color;\n\n    // directSpecular will be used for rim lighting, not an actual specular\n    reflectedLight.directSpecular += irradiance;\n\n    irradiance *= dotNL;\n\n    float shading = getShading( dotNL, shadow, material.shadingShift );\n\n    // toon shaded diffuse\n    reflectedLight.directDiffuse += getDiffuse( material, shading, directLight.color );\n  }\n\n  void RE_IndirectDiffuse_MToon( const in vec3 irradiance, const in GeometricContext geometry, const in MToonMaterial material, inout ReflectedLight reflectedLight ) {\n    // indirect diffuse will use diffuseColor, no shadeColor involved\n    reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n    // directSpecular will be used for rim lighting, not an actual specular\n    reflectedLight.directSpecular += irradiance;\n  }\n#endif\n\n#define RE_Direct RE_Direct_MToon\n#define RE_IndirectDiffuse RE_IndirectDiffuse_MToon\n#define Material_LightProbeLOD( material ) (0)\n\n#include <shadowmap_pars_fragment>\n// #include <bumpmap_pars_fragment>\n\n// #include <normalmap_pars_fragment>\n#ifdef USE_NORMALMAP\n\n  uniform sampler2D normalMap;\n  uniform mat3 normalMapUvTransform;\n  uniform vec2 normalScale;\n\n#endif\n\n// COMPAT: pre-r151\n// USE_NORMALMAP_OBJECTSPACE used to be OBJECTSPACE_NORMALMAP in pre-r151\n#if defined( USE_NORMALMAP_OBJECTSPACE ) || defined( OBJECTSPACE_NORMALMAP )\n\n  uniform mat3 normalMatrix;\n\n#endif\n\n// COMPAT: pre-r151\n// USE_NORMALMAP_TANGENTSPACE used to be TANGENTSPACE_NORMALMAP in pre-r151\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( TANGENTSPACE_NORMALMAP ) )\n\n  // Per-Pixel Tangent Space Normal Mapping\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n  // three-vrm specific change: it requires `uv` as an input in order to support uv scrolls\n\n  // Temporary compat against shader change @ Three.js r126, r151\n  #if THREE_VRM_THREE_REVISION >= 151\n\n    mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\n      vec3 q0 = dFdx( eye_pos.xyz );\n      vec3 q1 = dFdy( eye_pos.xyz );\n      vec2 st0 = dFdx( uv.st );\n      vec2 st1 = dFdy( uv.st );\n\n      vec3 N = surf_norm;\n\n      vec3 q1perp = cross( q1, N );\n      vec3 q0perp = cross( N, q0 );\n\n      vec3 T = q1perp * st0.x + q0perp * st1.x;\n      vec3 B = q1perp * st0.y + q0perp * st1.y;\n\n      float det = max( dot( T, T ), dot( B, B ) );\n      float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\n      return mat3( T * scale, B * scale, N );\n\n    }\n\n  #else\n\n    vec3 perturbNormal2Arb( vec2 uv, vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\n      vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n      vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n      vec2 st0 = dFdx( uv.st );\n      vec2 st1 = dFdy( uv.st );\n\n      vec3 N = normalize( surf_norm );\n\n      vec3 q1perp = cross( q1, N );\n      vec3 q0perp = cross( N, q0 );\n\n      vec3 T = q1perp * st0.x + q0perp * st1.x;\n      vec3 B = q1perp * st0.y + q0perp * st1.y;\n\n      // three-vrm specific change: Workaround for the issue that happens when delta of uv = 0.0\n      // TODO: Is this still required? Or shall I make a PR about it?\n      if ( length( T ) == 0.0 || length( B ) == 0.0 ) {\n        return surf_norm;\n      }\n\n      float det = max( dot( T, T ), dot( B, B ) );\n      float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\n      return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\n    }\n\n  #endif\n\n#endif\n\n// #include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\n// == post correction ==========================================================\nvoid postCorrection() {\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n  #include <fog_fragment>\n  #include <premultiplied_alpha_fragment>\n  #include <dithering_fragment>\n}\n\n// == main procedure ===========================================================\nvoid main() {\n  #include <clipping_planes_fragment>\n\n  vec2 uv = vec2(0.5, 0.5);\n\n  #if ( defined( MTOON_USE_UV ) && !defined( MTOON_UVS_VERTEX_ONLY ) )\n    uv = vUv;\n\n    float uvAnimMask = 1.0;\n    #ifdef USE_UVANIMATIONMASKTEXTURE\n      vec2 uvAnimationMaskTextureUv = ( uvAnimationMaskTextureUvTransform * vec3( uv, 1 ) ).xy;\n      uvAnimMask = texture2D( uvAnimationMaskTexture, uvAnimationMaskTextureUv ).b;\n    #endif\n\n    float uvRotCos = cos( uvAnimationRotationPhase * uvAnimMask );\n    float uvRotSin = sin( uvAnimationRotationPhase * uvAnimMask );\n    uv = mat2( uvRotCos, -uvRotSin, uvRotSin, uvRotCos ) * ( uv - 0.5 ) + 0.5;\n    uv = uv + vec2( uvAnimationScrollXOffset, uvAnimationScrollYOffset ) * uvAnimMask;\n  #endif\n\n  #ifdef DEBUG_UV\n    gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n    #if ( defined( MTOON_USE_UV ) && !defined( MTOON_UVS_VERTEX_ONLY ) )\n      gl_FragColor = vec4( uv, 0.0, 1.0 );\n    #endif\n    return;\n  #endif\n\n  vec4 diffuseColor = vec4( litFactor, opacity );\n  ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n  vec3 totalEmissiveRadiance = emissive * emissiveIntensity;\n\n  #include <logdepthbuf_fragment>\n\n  // #include <map_fragment>\n  #ifdef USE_MAP\n    vec2 mapUv = ( mapUvTransform * vec3( uv, 1 ) ).xy;\n    vec4 sampledDiffuseColor = texture2D( map, mapUv );\n    #ifdef DECODE_VIDEO_TEXTURE\n      sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n    #endif\n    diffuseColor *= sampledDiffuseColor;\n  #endif\n\n  // #include <color_fragment>\n  #if ( defined( USE_COLOR ) && !defined( IGNORE_VERTEX_COLOR ) )\n    diffuseColor.rgb *= vColor;\n  #endif\n\n  // #include <alphamap_fragment>\n\n  #include <alphatest_fragment>\n\n  // #include <specularmap_fragment>\n\n  // #include <normal_fragment_begin>\n  float faceDirection = gl_FrontFacing ? 1.0 : -1.0;\n\n  #ifdef FLAT_SHADED\n\n    vec3 fdx = dFdx( vViewPosition );\n    vec3 fdy = dFdy( vViewPosition );\n    vec3 normal = normalize( cross( fdx, fdy ) );\n\n  #else\n\n    vec3 normal = normalize( vNormal );\n\n    #ifdef DOUBLE_SIDED\n\n      normal *= faceDirection;\n\n    #endif\n\n  #endif\n\n  #ifdef USE_NORMALMAP\n\n    vec2 normalMapUv = ( normalMapUvTransform * vec3( uv, 1 ) ).xy;\n\n  #endif\n\n  #ifdef USE_NORMALMAP_TANGENTSPACE\n\n    #ifdef USE_TANGENT\n\n      mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\n    #else\n\n      mat3 tbn = getTangentFrame( - vViewPosition, normal, normalMapUv );\n\n    #endif\n\n    #if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\n      tbn[0] *= faceDirection;\n      tbn[1] *= faceDirection;\n\n    #endif\n\n  #endif\n\n  #ifdef USE_CLEARCOAT_NORMALMAP\n\n    #ifdef USE_TANGENT\n\n      mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\n    #else\n\n      mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\n    #endif\n\n    #if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\n      tbn2[0] *= faceDirection;\n      tbn2[1] *= faceDirection;\n\n    #endif\n\n  #endif\n\n  // non perturbed normal for clearcoat among others\n\n  vec3 nonPerturbedNormal = normal;\n\n  #ifdef OUTLINE\n    normal *= -1.0;\n  #endif\n\n  // #include <normal_fragment_maps>\n\n  // COMPAT: pre-r151\n  // USE_NORMALMAP_OBJECTSPACE used to be OBJECTSPACE_NORMALMAP in pre-r151\n  #if defined( USE_NORMALMAP_OBJECTSPACE ) || defined( OBJECTSPACE_NORMALMAP )\n\n    normal = texture2D( normalMap, normalMapUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n    #ifdef FLIP_SIDED\n\n      normal = - normal;\n\n    #endif\n\n    #ifdef DOUBLE_SIDED\n\n      normal = normal * faceDirection;\n\n    #endif\n\n    normal = normalize( normalMatrix * normal );\n\n  // COMPAT: pre-r151\n  // USE_NORMALMAP_TANGENTSPACE used to be TANGENTSPACE_NORMALMAP in pre-r151\n  #elif defined( USE_NORMALMAP_TANGENTSPACE ) || defined( TANGENTSPACE_NORMALMAP )\n\n    vec3 mapN = texture2D( normalMap, normalMapUv ).xyz * 2.0 - 1.0;\n    mapN.xy *= normalScale;\n\n    // COMPAT: pre-r151\n    #if THREE_VRM_THREE_REVISION >= 151 || defined( USE_TANGENT )\n\n      normal = normalize( tbn * mapN );\n\n    #else\n\n      normal = perturbNormal2Arb( uv, -vViewPosition, normal, mapN, faceDirection );\n\n    #endif\n\n  #endif\n\n  // #include <emissivemap_fragment>\n  #ifdef USE_EMISSIVEMAP\n    vec2 emissiveMapUv = ( emissiveMapUvTransform * vec3( uv, 1 ) ).xy;\n    totalEmissiveRadiance *= texture2D( emissiveMap, emissiveMapUv ).rgb;\n  #endif\n\n  #ifdef DEBUG_NORMAL\n    gl_FragColor = vec4( 0.5 + 0.5 * normal, 1.0 );\n    return;\n  #endif\n\n  // -- MToon: lighting --------------------------------------------------------\n  // accumulation\n  // #include <lights_phong_fragment>\n  MToonMaterial material;\n\n  material.diffuseColor = diffuseColor.rgb;\n\n  material.shadeColor = shadeColorFactor;\n  #ifdef USE_SHADEMULTIPLYTEXTURE\n    vec2 shadeMultiplyTextureUv = ( shadeMultiplyTextureUvTransform * vec3( uv, 1 ) ).xy;\n    material.shadeColor *= texture2D( shadeMultiplyTexture, shadeMultiplyTextureUv ).rgb;\n  #endif\n\n  #if ( defined( USE_COLOR ) && !defined( IGNORE_VERTEX_COLOR ) )\n    material.shadeColor.rgb *= vColor;\n  #endif\n\n  material.shadingShift = shadingShiftFactor;\n  #ifdef USE_SHADINGSHIFTTEXTURE\n    vec2 shadingShiftTextureUv = ( shadingShiftTextureUvTransform * vec3( uv, 1 ) ).xy;\n    material.shadingShift += texture2D( shadingShiftTexture, shadingShiftTextureUv ).r * shadingShiftTextureScale;\n  #endif\n\n  // #include <lights_fragment_begin>\n\n  // MToon Specific changes:\n  // Since we want to take shadows into account of shading instead of irradiance,\n  // we had to modify the codes that multiplies the results of shadowmap into color of direct lights.\n\n  // COMPAT: pre-r156 uses a struct GeometricContext\n  #if THREE_VRM_THREE_REVISION >= 157\n    vec3 geometryPosition = - vViewPosition;\n    vec3 geometryNormal = normal;\n    vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n    vec3 geometryClearcoatNormal;\n\n    #ifdef USE_CLEARCOAT\n\n      geometryClearcoatNormal = clearcoatNormal;\n\n    #endif\n  #else\n    GeometricContext geometry;\n\n    geometry.position = - vViewPosition;\n    geometry.normal = normal;\n    geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n    #ifdef USE_CLEARCOAT\n\n      geometry.clearcoatNormal = clearcoatNormal;\n\n    #endif\n  #endif\n\n  IncidentLight directLight;\n\n  // since these variables will be used in unrolled loop, we have to define in prior\n  float shadow;\n\n  #if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n    PointLight pointLight;\n    #if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n    PointLightShadow pointLightShadow;\n    #endif\n\n    #pragma unroll_loop_start\n    for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n      pointLight = pointLights[ i ];\n\n      // COMPAT: pre-r156 uses a struct GeometricContext\n      #if THREE_VRM_THREE_REVISION >= 157\n        getPointLightInfo( pointLight, geometryPosition, directLight );\n      #else\n        getPointLightInfo( pointLight, geometry, directLight );\n      #endif\n\n      shadow = 1.0;\n      #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n      pointLightShadow = pointLightShadows[ i ];\n      // COMPAT: pre-r166\n      // r166 introduced shadowIntensity\n      #if THREE_VRM_THREE_REVISION >= 166\n        shadow = all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n      #else\n        shadow = all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n      #endif\n      #endif\n\n      // COMPAT: pre-r156 uses a struct GeometricContext\n      #if THREE_VRM_THREE_REVISION >= 157\n        RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, shadow, reflectedLight );\n      #else\n        RE_Direct( directLight, geometry, material, shadow, reflectedLight );\n      #endif\n\n    }\n    #pragma unroll_loop_end\n\n  #endif\n\n  #if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n    SpotLight spotLight;\n    #if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n    SpotLightShadow spotLightShadow;\n    #endif\n\n    #pragma unroll_loop_start\n    for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n      spotLight = spotLights[ i ];\n\n      // COMPAT: pre-r156 uses a struct GeometricContext\n      #if THREE_VRM_THREE_REVISION >= 157\n        getSpotLightInfo( spotLight, geometryPosition, directLight );\n      #else\n        getSpotLightInfo( spotLight, geometry, directLight );\n      #endif\n\n      shadow = 1.0;\n      #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n      spotLightShadow = spotLightShadows[ i ];\n      // COMPAT: pre-r166\n      // r166 introduced shadowIntensity\n      #if THREE_VRM_THREE_REVISION >= 166\n        shadow = all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n      #else\n        shadow = all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n      #endif\n      #endif\n\n      // COMPAT: pre-r156 uses a struct GeometricContext\n      #if THREE_VRM_THREE_REVISION >= 157\n        RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, shadow, reflectedLight );\n      #else\n        RE_Direct( directLight, geometry, material, shadow, reflectedLight );\n      #endif\n\n    }\n    #pragma unroll_loop_end\n\n  #endif\n\n  #if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n    DirectionalLight directionalLight;\n    #if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n    DirectionalLightShadow directionalLightShadow;\n    #endif\n\n    #pragma unroll_loop_start\n    for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n      directionalLight = directionalLights[ i ];\n\n      // COMPAT: pre-r156 uses a struct GeometricContext\n      #if THREE_VRM_THREE_REVISION >= 157\n        getDirectionalLightInfo( directionalLight, directLight );\n      #else\n        getDirectionalLightInfo( directionalLight, geometry, directLight );\n      #endif\n\n      shadow = 1.0;\n      #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n      directionalLightShadow = directionalLightShadows[ i ];\n      // COMPAT: pre-r166\n      // r166 introduced shadowIntensity\n      #if THREE_VRM_THREE_REVISION >= 166\n        shadow = all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n      #else\n        shadow = all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n      #endif\n      #endif\n\n      // COMPAT: pre-r156 uses a struct GeometricContext\n      #if THREE_VRM_THREE_REVISION >= 157\n        RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, shadow, reflectedLight );\n      #else\n        RE_Direct( directLight, geometry, material, shadow, reflectedLight );\n      #endif\n\n    }\n    #pragma unroll_loop_end\n\n  #endif\n\n  // #if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n  //   RectAreaLight rectAreaLight;\n\n  //   #pragma unroll_loop_start\n  //   for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n  //     rectAreaLight = rectAreaLights[ i ];\n  //     RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n  //   }\n  //   #pragma unroll_loop_end\n\n  // #endif\n\n  #if defined( RE_IndirectDiffuse )\n\n    vec3 iblIrradiance = vec3( 0.0 );\n\n    vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n    // COMPAT: pre-r156 uses a struct GeometricContext\n    // COMPAT: pre-r156 doesn't have a define USE_LIGHT_PROBES\n    #if THREE_VRM_THREE_REVISION >= 157\n      #if defined( USE_LIGHT_PROBES )\n        irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n      #endif\n    #else\n      irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n    #endif\n\n    #if ( NUM_HEMI_LIGHTS > 0 )\n\n      #pragma unroll_loop_start\n      for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n        // COMPAT: pre-r156 uses a struct GeometricContext\n        #if THREE_VRM_THREE_REVISION >= 157\n          irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n        #else\n          irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n        #endif\n\n      }\n      #pragma unroll_loop_end\n\n    #endif\n\n  #endif\n\n  // #if defined( RE_IndirectSpecular )\n\n  //   vec3 radiance = vec3( 0.0 );\n  //   vec3 clearcoatRadiance = vec3( 0.0 );\n\n  // #endif\n\n  #include <lights_fragment_maps>\n  #include <lights_fragment_end>\n\n  // modulation\n  #include <aomap_fragment>\n\n  vec3 col = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\n  #ifdef DEBUG_LITSHADERATE\n    gl_FragColor = vec4( col, diffuseColor.a );\n    postCorrection();\n    return;\n  #endif\n\n  // -- MToon: rim lighting -----------------------------------------\n  vec3 viewDir = normalize( vViewPosition );\n\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n    reflectedLight.directSpecular /= PI;\n  #endif\n  vec3 rimMix = mix( vec3( 1.0 ), reflectedLight.directSpecular, 1.0 );\n\n  vec3 rim = parametricRimColorFactor * pow( saturate( 1.0 - dot( viewDir, normal ) + parametricRimLiftFactor ), parametricRimFresnelPowerFactor );\n\n  #ifdef USE_MATCAPTEXTURE\n    {\n      vec3 x = normalize( vec3( viewDir.z, 0.0, -viewDir.x ) );\n      vec3 y = cross( viewDir, x ); // guaranteed to be normalized\n      vec2 sphereUv = 0.5 + 0.5 * vec2( dot( x, normal ), -dot( y, normal ) );\n      sphereUv = ( matcapTextureUvTransform * vec3( sphereUv, 1 ) ).xy;\n      vec3 matcap = texture2D( matcapTexture, sphereUv ).rgb;\n      rim += matcapFactor * matcap;\n    }\n  #endif\n\n  #ifdef USE_RIMMULTIPLYTEXTURE\n    vec2 rimMultiplyTextureUv = ( rimMultiplyTextureUvTransform * vec3( uv, 1 ) ).xy;\n    rim *= texture2D( rimMultiplyTexture, rimMultiplyTextureUv ).rgb;\n  #endif\n\n  col += rimMix * rim;\n\n  // -- MToon: Emission --------------------------------------------------------\n  col += totalEmissiveRadiance;\n\n  // #include <envmap_fragment>\n\n  // -- Almost done! -----------------------------------------------------------\n  #if defined( OUTLINE )\n    col = outlineColorFactor.rgb * mix( vec3( 1.0 ), col, outlineLightingMixFactor );\n  #endif\n\n  #ifdef OPAQUE\n    diffuseColor.a = 1.0;\n  #endif\n\n  gl_FragColor = vec4( col, diffuseColor.a );\n  postCorrection();\n}\n"}),this.uvAnimationScrollXSpeedFactor=0,this.uvAnimationScrollYSpeedFactor=0,this.uvAnimationRotationSpeedFactor=0,this.fog=!0,this.normalMapType=n.IOt,this._ignoreVertexColor=!0,this._v0CompatShade=!1,this._debugMode="none",this._outlineWidthMode=eV.None,this._isOutline=!1,e.transparentWithZWrite&&(e.depthWrite=!0),delete e.transparentWithZWrite,e.fog=!0,e.lights=!0,e.clipping=!0,this.uniforms=n.rDY.merge([r.UniformsLib.common,r.UniformsLib.normalmap,r.UniformsLib.emissivemap,r.UniformsLib.fog,r.UniformsLib.lights,{litFactor:{value:new n.Ilk(1,1,1)},mapUvTransform:{value:new n.Vkp},colorAlpha:{value:1},normalMapUvTransform:{value:new n.Vkp},shadeColorFactor:{value:new n.Ilk(0,0,0)},shadeMultiplyTexture:{value:null},shadeMultiplyTextureUvTransform:{value:new n.Vkp},shadingShiftFactor:{value:0},shadingShiftTexture:{value:null},shadingShiftTextureUvTransform:{value:new n.Vkp},shadingShiftTextureScale:{value:1},shadingToonyFactor:{value:.9},giEqualizationFactor:{value:.9},matcapFactor:{value:new n.Ilk(1,1,1)},matcapTexture:{value:null},matcapTextureUvTransform:{value:new n.Vkp},parametricRimColorFactor:{value:new n.Ilk(0,0,0)},rimMultiplyTexture:{value:null},rimMultiplyTextureUvTransform:{value:new n.Vkp},rimLightingMixFactor:{value:1},parametricRimFresnelPowerFactor:{value:5},parametricRimLiftFactor:{value:0},emissive:{value:new n.Ilk(0,0,0)},emissiveIntensity:{value:1},emissiveMapUvTransform:{value:new n.Vkp},outlineWidthMultiplyTexture:{value:null},outlineWidthMultiplyTextureUvTransform:{value:new n.Vkp},outlineWidthFactor:{value:0},outlineColorFactor:{value:new n.Ilk(0,0,0)},outlineLightingMixFactor:{value:1},uvAnimationMaskTexture:{value:null},uvAnimationMaskTextureUvTransform:{value:new n.Vkp},uvAnimationScrollXOffset:{value:0},uvAnimationScrollYOffset:{value:0},uvAnimationRotationPhase:{value:0}},null!=(t=e.uniforms)?t:{}]),this.setValues(e),this._uploadUniformsWorkaround(),this.customProgramCacheKey=()=>[...Object.entries(this._generateDefines()).map(([e,t])=>`${e}:${t}`),this.matcapTexture?`matcapTextureColorSpace:${eB(this.matcapTexture)}`:"",this.shadeMultiplyTexture?`shadeMultiplyTextureColorSpace:${eB(this.shadeMultiplyTexture)}`:"",this.rimMultiplyTexture?`rimMultiplyTextureColorSpace:${eB(this.rimMultiplyTexture)}`:""].join(","),this.onBeforeCompile=e=>{let t=parseInt(n.UZH,10),i=Object.entries(eO(eO({},this._generateDefines()),this.defines)).filter(([e,t])=>!!t).map(([e,t])=>`#define ${e} ${t}`).join("\n")+"\n";e.vertexShader=i+e.vertexShader,e.fragmentShader=i+e.fragmentShader,t<154&&(e.fragmentShader=e.fragmentShader.replace("#include <colorspace_fragment>","#include <encodings_fragment>"))}}get color(){return this.uniforms.litFactor.value}set color(e){this.uniforms.litFactor.value=e}get map(){return this.uniforms.map.value}set map(e){this.uniforms.map.value=e}get normalMap(){return this.uniforms.normalMap.value}set normalMap(e){this.uniforms.normalMap.value=e}get normalScale(){return this.uniforms.normalScale.value}set normalScale(e){this.uniforms.normalScale.value=e}get emissive(){return this.uniforms.emissive.value}set emissive(e){this.uniforms.emissive.value=e}get emissiveIntensity(){return this.uniforms.emissiveIntensity.value}set emissiveIntensity(e){this.uniforms.emissiveIntensity.value=e}get emissiveMap(){return this.uniforms.emissiveMap.value}set emissiveMap(e){this.uniforms.emissiveMap.value=e}get shadeColorFactor(){return this.uniforms.shadeColorFactor.value}set shadeColorFactor(e){this.uniforms.shadeColorFactor.value=e}get shadeMultiplyTexture(){return this.uniforms.shadeMultiplyTexture.value}set shadeMultiplyTexture(e){this.uniforms.shadeMultiplyTexture.value=e}get shadingShiftFactor(){return this.uniforms.shadingShiftFactor.value}set shadingShiftFactor(e){this.uniforms.shadingShiftFactor.value=e}get shadingShiftTexture(){return this.uniforms.shadingShiftTexture.value}set shadingShiftTexture(e){this.uniforms.shadingShiftTexture.value=e}get shadingShiftTextureScale(){return this.uniforms.shadingShiftTextureScale.value}set shadingShiftTextureScale(e){this.uniforms.shadingShiftTextureScale.value=e}get shadingToonyFactor(){return this.uniforms.shadingToonyFactor.value}set shadingToonyFactor(e){this.uniforms.shadingToonyFactor.value=e}get giEqualizationFactor(){return this.uniforms.giEqualizationFactor.value}set giEqualizationFactor(e){this.uniforms.giEqualizationFactor.value=e}get matcapFactor(){return this.uniforms.matcapFactor.value}set matcapFactor(e){this.uniforms.matcapFactor.value=e}get matcapTexture(){return this.uniforms.matcapTexture.value}set matcapTexture(e){this.uniforms.matcapTexture.value=e}get parametricRimColorFactor(){return this.uniforms.parametricRimColorFactor.value}set parametricRimColorFactor(e){this.uniforms.parametricRimColorFactor.value=e}get rimMultiplyTexture(){return this.uniforms.rimMultiplyTexture.value}set rimMultiplyTexture(e){this.uniforms.rimMultiplyTexture.value=e}get rimLightingMixFactor(){return this.uniforms.rimLightingMixFactor.value}set rimLightingMixFactor(e){this.uniforms.rimLightingMixFactor.value=e}get parametricRimFresnelPowerFactor(){return this.uniforms.parametricRimFresnelPowerFactor.value}set parametricRimFresnelPowerFactor(e){this.uniforms.parametricRimFresnelPowerFactor.value=e}get parametricRimLiftFactor(){return this.uniforms.parametricRimLiftFactor.value}set parametricRimLiftFactor(e){this.uniforms.parametricRimLiftFactor.value=e}get outlineWidthMultiplyTexture(){return this.uniforms.outlineWidthMultiplyTexture.value}set outlineWidthMultiplyTexture(e){this.uniforms.outlineWidthMultiplyTexture.value=e}get outlineWidthFactor(){return this.uniforms.outlineWidthFactor.value}set outlineWidthFactor(e){this.uniforms.outlineWidthFactor.value=e}get outlineColorFactor(){return this.uniforms.outlineColorFactor.value}set outlineColorFactor(e){this.uniforms.outlineColorFactor.value=e}get outlineLightingMixFactor(){return this.uniforms.outlineLightingMixFactor.value}set outlineLightingMixFactor(e){this.uniforms.outlineLightingMixFactor.value=e}get uvAnimationMaskTexture(){return this.uniforms.uvAnimationMaskTexture.value}set uvAnimationMaskTexture(e){this.uniforms.uvAnimationMaskTexture.value=e}get uvAnimationScrollXOffset(){return this.uniforms.uvAnimationScrollXOffset.value}set uvAnimationScrollXOffset(e){this.uniforms.uvAnimationScrollXOffset.value=e}get uvAnimationScrollYOffset(){return this.uniforms.uvAnimationScrollYOffset.value}set uvAnimationScrollYOffset(e){this.uniforms.uvAnimationScrollYOffset.value=e}get uvAnimationRotationPhase(){return this.uniforms.uvAnimationRotationPhase.value}set uvAnimationRotationPhase(e){this.uniforms.uvAnimationRotationPhase.value=e}get ignoreVertexColor(){return this._ignoreVertexColor}set ignoreVertexColor(e){this._ignoreVertexColor=e,this.needsUpdate=!0}get v0CompatShade(){return this._v0CompatShade}set v0CompatShade(e){this._v0CompatShade=e,this.needsUpdate=!0}get debugMode(){return this._debugMode}set debugMode(e){this._debugMode=e,this.needsUpdate=!0}get outlineWidthMode(){return this._outlineWidthMode}set outlineWidthMode(e){this._outlineWidthMode=e,this.needsUpdate=!0}get isOutline(){return this._isOutline}set isOutline(e){this._isOutline=e,this.needsUpdate=!0}get isMToonMaterial(){return!0}update(e){this._uploadUniformsWorkaround(),this._updateUVAnimation(e)}copy(e){return super.copy(e),this.map=e.map,this.normalMap=e.normalMap,this.emissiveMap=e.emissiveMap,this.shadeMultiplyTexture=e.shadeMultiplyTexture,this.shadingShiftTexture=e.shadingShiftTexture,this.matcapTexture=e.matcapTexture,this.rimMultiplyTexture=e.rimMultiplyTexture,this.outlineWidthMultiplyTexture=e.outlineWidthMultiplyTexture,this.uvAnimationMaskTexture=e.uvAnimationMaskTexture,this.normalMapType=e.normalMapType,this.uvAnimationScrollXSpeedFactor=e.uvAnimationScrollXSpeedFactor,this.uvAnimationScrollYSpeedFactor=e.uvAnimationScrollYSpeedFactor,this.uvAnimationRotationSpeedFactor=e.uvAnimationRotationSpeedFactor,this.ignoreVertexColor=e.ignoreVertexColor,this.v0CompatShade=e.v0CompatShade,this.debugMode=e.debugMode,this.outlineWidthMode=e.outlineWidthMode,this.isOutline=e.isOutline,this.needsUpdate=!0,this}_updateUVAnimation(e){this.uniforms.uvAnimationScrollXOffset.value+=e*this.uvAnimationScrollXSpeedFactor,this.uniforms.uvAnimationScrollYOffset.value+=e*this.uvAnimationScrollYSpeedFactor,this.uniforms.uvAnimationRotationPhase.value+=e*this.uvAnimationRotationSpeedFactor,this.uniforms.alphaTest.value=this.alphaTest,this.uniformsNeedUpdate=!0}_uploadUniformsWorkaround(){this.uniforms.opacity.value=this.opacity,this._updateTextureMatrix(this.uniforms.map,this.uniforms.mapUvTransform),this._updateTextureMatrix(this.uniforms.normalMap,this.uniforms.normalMapUvTransform),this._updateTextureMatrix(this.uniforms.emissiveMap,this.uniforms.emissiveMapUvTransform),this._updateTextureMatrix(this.uniforms.shadeMultiplyTexture,this.uniforms.shadeMultiplyTextureUvTransform),this._updateTextureMatrix(this.uniforms.shadingShiftTexture,this.uniforms.shadingShiftTextureUvTransform),this._updateTextureMatrix(this.uniforms.matcapTexture,this.uniforms.matcapTextureUvTransform),this._updateTextureMatrix(this.uniforms.rimMultiplyTexture,this.uniforms.rimMultiplyTextureUvTransform),this._updateTextureMatrix(this.uniforms.outlineWidthMultiplyTexture,this.uniforms.outlineWidthMultiplyTextureUvTransform),this._updateTextureMatrix(this.uniforms.uvAnimationMaskTexture,this.uniforms.uvAnimationMaskTextureUvTransform),this.uniformsNeedUpdate=!0}_generateDefines(){let e=parseInt(n.UZH,10),t=null!==this.outlineWidthMultiplyTexture,i=null!==this.map||null!==this.normalMap||null!==this.emissiveMap||null!==this.shadeMultiplyTexture||null!==this.shadingShiftTexture||null!==this.rimMultiplyTexture||null!==this.uvAnimationMaskTexture;return{THREE_VRM_THREE_REVISION:e,OUTLINE:this._isOutline,MTOON_USE_UV:t||i,MTOON_UVS_VERTEX_ONLY:t&&!i,V0_COMPAT_SHADE:this._v0CompatShade,USE_SHADEMULTIPLYTEXTURE:null!==this.shadeMultiplyTexture,USE_SHADINGSHIFTTEXTURE:null!==this.shadingShiftTexture,USE_MATCAPTEXTURE:null!==this.matcapTexture,USE_RIMMULTIPLYTEXTURE:null!==this.rimMultiplyTexture,USE_OUTLINEWIDTHMULTIPLYTEXTURE:this._isOutline&&null!==this.outlineWidthMultiplyTexture,USE_UVANIMATIONMASKTEXTURE:null!==this.uvAnimationMaskTexture,IGNORE_VERTEX_COLOR:!0===this._ignoreVertexColor,DEBUG_NORMAL:"normal"===this._debugMode,DEBUG_LITSHADERATE:"litShadeRate"===this._debugMode,DEBUG_UV:"uv"===this._debugMode,OUTLINE_WIDTH_SCREEN:this._isOutline&&this._outlineWidthMode===eV.ScreenCoordinates}}_updateTextureMatrix(e,t){e.value&&(e.value.matrixAutoUpdate&&e.value.updateMatrix(),t.value.copy(e.value.matrix))}},ek=new Set(["1.0","1.0-beta"]),eW=class e{get name(){return e.EXTENSION_NAME}constructor(e,t={}){var i,n,r,o;this.parser=e,this.materialType=null!=(i=t.materialType)?i:eH,this.renderOrderOffset=null!=(n=t.renderOrderOffset)?n:0,this.v0CompatShade=null!=(r=t.v0CompatShade)&&r,this.debugMode=null!=(o=t.debugMode)?o:"none",this._mToonMaterialSet=new Set}beforeRoot(){return eC(this,null,function*(){this._removeUnlitExtensionIfMToonExists()})}afterRoot(e){return eC(this,null,function*(){e.userData.vrmMToonMaterials=Array.from(this._mToonMaterialSet)})}getMaterialType(e){return this._getMToonExtension(e)?this.materialType:null}extendMaterialParams(e,t){let i=this._getMToonExtension(e);return i?this._extendMaterialParams(i,t):null}loadMesh(e){return eC(this,null,function*(){var t;let i=this.parser,n=null==(t=i.json.meshes)?void 0:t[e];if(null==n)throw Error(`MToonMaterialLoaderPlugin: Attempt to use meshes[${e}] of glTF but the mesh doesn't exist`);let r=n.primitives,o=yield i.loadMesh(e);if(1===r.length){let e=r[0].material;null!=e&&this._setupPrimitive(o,e)}else for(let e=0;e<r.length;e++){let t=o.children[e],i=r[e].material;null!=i&&this._setupPrimitive(t,i)}return o})}_removeUnlitExtensionIfMToonExists(){let e=this.parser.json.materials;null==e||e.map((e,t)=>{var i;this._getMToonExtension(t)&&(null==(i=e.extensions)?void 0:i.KHR_materials_unlit)&&delete e.extensions.KHR_materials_unlit})}_getMToonExtension(t){var i,n;let r=null==(i=this.parser.json.materials)?void 0:i[t];if(null==r){console.warn(`MToonMaterialLoaderPlugin: Attempt to use materials[${t}] of glTF but the material doesn't exist`);return}let o=null==(n=r.extensions)?void 0:n[e.EXTENSION_NAME];if(null==o)return;let s=o.specVersion;if(!ek.has(s)){console.warn(`MToonMaterialLoaderPlugin: Unknown ${e.EXTENSION_NAME} specVersion "${s}"`);return}return o}_extendMaterialParams(e,t){return eC(this,null,function*(){var i;delete t.metalness,delete t.roughness;let n=new eD(this.parser,t);n.assignPrimitive("transparentWithZWrite",e.transparentWithZWrite),n.assignColor("shadeColorFactor",e.shadeColorFactor),n.assignTexture("shadeMultiplyTexture",e.shadeMultiplyTexture,!0),n.assignPrimitive("shadingShiftFactor",e.shadingShiftFactor),n.assignTexture("shadingShiftTexture",e.shadingShiftTexture,!0),n.assignPrimitive("shadingShiftTextureScale",null==(i=e.shadingShiftTexture)?void 0:i.scale),n.assignPrimitive("shadingToonyFactor",e.shadingToonyFactor),n.assignPrimitive("giEqualizationFactor",e.giEqualizationFactor),n.assignColor("matcapFactor",e.matcapFactor),n.assignTexture("matcapTexture",e.matcapTexture,!0),n.assignColor("parametricRimColorFactor",e.parametricRimColorFactor),n.assignTexture("rimMultiplyTexture",e.rimMultiplyTexture,!0),n.assignPrimitive("rimLightingMixFactor",e.rimLightingMixFactor),n.assignPrimitive("parametricRimFresnelPowerFactor",e.parametricRimFresnelPowerFactor),n.assignPrimitive("parametricRimLiftFactor",e.parametricRimLiftFactor),n.assignPrimitive("outlineWidthMode",e.outlineWidthMode),n.assignPrimitive("outlineWidthFactor",e.outlineWidthFactor),n.assignTexture("outlineWidthMultiplyTexture",e.outlineWidthMultiplyTexture,!1),n.assignColor("outlineColorFactor",e.outlineColorFactor),n.assignPrimitive("outlineLightingMixFactor",e.outlineLightingMixFactor),n.assignTexture("uvAnimationMaskTexture",e.uvAnimationMaskTexture,!1),n.assignPrimitive("uvAnimationScrollXSpeedFactor",e.uvAnimationScrollXSpeedFactor),n.assignPrimitive("uvAnimationScrollYSpeedFactor",e.uvAnimationScrollYSpeedFactor),n.assignPrimitive("uvAnimationRotationSpeedFactor",e.uvAnimationRotationSpeedFactor),n.assignPrimitive("v0CompatShade",this.v0CompatShade),n.assignPrimitive("debugMode",this.debugMode),yield n.pending})}_setupPrimitive(e,t){let i=this._getMToonExtension(t);if(i){let t=this._parseRenderOrder(i);e.renderOrder=t+this.renderOrderOffset,this._generateOutline(e),this._addToMaterialSet(e);return}}_shouldGenerateOutline(e){return"string"==typeof e.outlineWidthMode&&"none"!==e.outlineWidthMode&&"number"==typeof e.outlineWidthFactor&&e.outlineWidthFactor>0}_generateOutline(e){let t=e.material;if(!(t instanceof n.F5T)||!this._shouldGenerateOutline(t))return;e.material=[t];let i=t.clone();i.name+=" (Outline)",i.isOutline=!0,i.side=n._Li,e.material.push(i);let r=e.geometry,o=r.index?r.index.count:r.attributes.position.count/3;r.addGroup(0,o,0),r.addGroup(0,o,1)}_addToMaterialSet(e){let t=e.material,i=new Set;for(let e of(Array.isArray(t)?t.forEach(e=>i.add(e)):i.add(t),i))this._mToonMaterialSet.add(e)}_parseRenderOrder(e){var t;return(e.transparentWithZWrite?0:19)+(null!=(t=e.renderQueueOffsetNumber)?t:0)}};eW.EXTENSION_NAME="VRMC_materials_mtoon";var ez=(e,t,i)=>new Promise((n,r)=>{var o=e=>{try{a(i.next(e))}catch(e){r(e)}},s=e=>{try{a(i.throw(e))}catch(e){r(e)}},a=e=>e.done?n(e.value):Promise.resolve(e.value).then(o,s);a((i=i.apply(e,t)).next())}),eX=class e{get name(){return e.EXTENSION_NAME}constructor(e){this.parser=e}extendMaterialParams(e,t){return ez(this,null,function*(){let i=this._getHDREmissiveMultiplierExtension(e);if(null==i)return;console.warn("VRMMaterialsHDREmissiveMultiplierLoaderPlugin: `VRMC_materials_hdr_emissiveMultiplier` is archived. Use `KHR_materials_emissive_strength` instead.");let n=i.emissiveMultiplier;t.emissiveIntensity=n})}_getHDREmissiveMultiplierExtension(t){var i,n;let r=null==(i=this.parser.json.materials)?void 0:i[t];if(null==r){console.warn(`VRMMaterialsHDREmissiveMultiplierLoaderPlugin: Attempt to use materials[${t}] of glTF but the material doesn't exist`);return}let o=null==(n=r.extensions)?void 0:n[e.EXTENSION_NAME];if(null!=o)return o}};eX.EXTENSION_NAME="VRMC_materials_hdr_emissiveMultiplier";var eG=Object.defineProperty,eY=Object.defineProperties,ej=Object.getOwnPropertyDescriptors,eq=Object.getOwnPropertySymbols,eQ=Object.prototype.hasOwnProperty,e$=Object.prototype.propertyIsEnumerable,eZ=(e,t,i)=>t in e?eG(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,eJ=(e,t)=>{for(var i in t||(t={}))eQ.call(t,i)&&eZ(e,i,t[i]);if(eq)for(var i of eq(t))e$.call(t,i)&&eZ(e,i,t[i]);return e},eK=(e,t)=>eY(e,ej(t)),e0=(e,t,i)=>new Promise((n,r)=>{var o=e=>{try{a(i.next(e))}catch(e){r(e)}},s=e=>{try{a(i.throw(e))}catch(e){r(e)}},a=e=>e.done?n(e.value):Promise.resolve(e.value).then(o,s);a((i=i.apply(e,t)).next())});function e1(e){return Math.pow(e,2.2)}var e3=class{get name(){return"VRMMaterialsV0CompatPlugin"}constructor(e){var t;this.parser=e,this._renderQueueMapTransparent=new Map,this._renderQueueMapTransparentZWrite=new Map;let i=this.parser.json;i.extensionsUsed=null!=(t=i.extensionsUsed)?t:[],-1===i.extensionsUsed.indexOf("KHR_texture_transform")&&i.extensionsUsed.push("KHR_texture_transform")}beforeRoot(){return e0(this,null,function*(){var e;let t=this.parser.json,i=null==(e=t.extensions)?void 0:e.VRM,n=null==i?void 0:i.materialProperties;n&&(this._populateRenderQueueMap(n),n.forEach((e,i)=>{var n,r;let o=null==(n=t.materials)?void 0:n[i];if(null==o){console.warn(`VRMMaterialsV0CompatPlugin: Attempt to use materials[${i}] of glTF but the material doesn't exist`);return}if("VRM/MToon"===e.shader){let n=this._parseV0MToonProperties(e,o);t.materials[i]=n}else if(null==(r=e.shader)?void 0:r.startsWith("VRM/Unlit")){let n=this._parseV0UnlitProperties(e,o);t.materials[i]=n}else"VRM_USE_GLTFSHADER"===e.shader||console.warn(`VRMMaterialsV0CompatPlugin: Unknown shader: ${e.shader}`)}))})}_parseV0MToonProperties(e,t){var i,r,o,s,a,l,u,d,h,p,c,m,f,g,_,v,M,x,y,w,T,P,R,E,S,A,L,b,I,U,O,C,N,D,V,F,B,H,k,W,z,X,G,Y,j,q,Q,$,Z,J,K,ee,et,ei,en;let er=null!=(r=null==(i=e.keywordMap)?void 0:i._ALPHABLEND_ON)&&r,eo=(null==(o=e.floatProperties)?void 0:o._ZWrite)===1,es=this._v0ParseRenderQueue(e),ea=null!=(a=null==(s=e.keywordMap)?void 0:s._ALPHATEST_ON)&&a,el=ea?null!=(u=null==(l=e.floatProperties)?void 0:l._Cutoff)?u:.5:void 0,eu=null!=(h=null==(d=e.floatProperties)?void 0:d._CullMode)?h:2,ed=this._portTextureTransform(e),eh=(null!=(c=null==(p=e.vectorProperties)?void 0:p._Color)?c:[1,1,1,1]).map((e,t)=>3===t?e:e1(e)),ep=null==(m=e.textureProperties)?void 0:m._MainTex,ec=null!=ep?{index:ep,extensions:eJ({},ed)}:void 0,em=null!=(g=null==(f=e.floatProperties)?void 0:f._BumpScale)?g:1,ef=null==(_=e.textureProperties)?void 0:_._BumpMap,eg=null!=ef?{index:ef,scale:em,extensions:eJ({},ed)}:void 0,e_=(null!=(M=null==(v=e.vectorProperties)?void 0:v._EmissionColor)?M:[0,0,0,1]).map(e1),ev=null==(x=e.textureProperties)?void 0:x._EmissionMap,eM=null!=ev?{index:ev,extensions:eJ({},ed)}:void 0,ex=(null!=(w=null==(y=e.vectorProperties)?void 0:y._ShadeColor)?w:[.97,.81,.86,1]).map(e1),ey=null==(T=e.textureProperties)?void 0:T._ShadeTexture,ew=null!=ey?{index:ey,extensions:eJ({},ed)}:void 0,eT=null!=(R=null==(P=e.floatProperties)?void 0:P._ShadeShift)?R:0,eP=null!=(S=null==(E=e.floatProperties)?void 0:E._ShadeToony)?S:.9;eP=n.M8C.lerp(eP,1,.5+.5*eT),eT=-eT-(1-eP);let eR=null!=(L=null==(A=e.floatProperties)?void 0:A._IndirectLightIntensity)?L:.1,eE=null==(b=e.textureProperties)?void 0:b._SphereAdd,eS=null!=(U=null==(I=e.floatProperties)?void 0:I._RimLightingMix)?U:0,eA=null==(O=e.textureProperties)?void 0:O._RimTexture,eL=null!=eA?{index:eA,extensions:eJ({},ed)}:void 0,eb=(null!=(N=null==(C=e.vectorProperties)?void 0:C._RimColor)?N:[0,0,0,1]).map(e1),eI=null!=(V=null==(D=e.floatProperties)?void 0:D._RimFresnelPower)?V:1,eU=null!=(B=null==(F=e.floatProperties)?void 0:F._RimLift)?B:0,eO=["none","worldCoordinates","screenCoordinates"][null!=(k=null==(H=e.floatProperties)?void 0:H._OutlineWidthMode)?k:0],eC=null!=(z=null==(W=e.floatProperties)?void 0:W._OutlineWidth)?z:0;eC*=.01;let eN=null==(X=e.textureProperties)?void 0:X._OutlineWidthTexture,eD=null!=eN?{index:eN,extensions:eJ({},ed)}:void 0,eV=(null!=(Y=null==(G=e.vectorProperties)?void 0:G._OutlineColor)?Y:[0,0,0]).map(e1),eF=1===(null!=(q=null==(j=e.floatProperties)?void 0:j._OutlineColorMode)?q:0)?null!=($=null==(Q=e.floatProperties)?void 0:Q._OutlineLightingMix)?$:1:0,eB=null==(Z=e.textureProperties)?void 0:Z._UvAnimMaskTexture,eH=null!=eB?{index:eB,extensions:eJ({},ed)}:void 0,ek=null!=(K=null==(J=e.floatProperties)?void 0:J._UvAnimScrollX)?K:0,eW=null!=(et=null==(ee=e.floatProperties)?void 0:ee._UvAnimScrollY)?et:0;null!=eW&&(eW=-eW);let ez={specVersion:"1.0",transparentWithZWrite:eo&&er,renderQueueOffsetNumber:es,shadeColorFactor:ex,shadeMultiplyTexture:ew,shadingShiftFactor:eT,shadingToonyFactor:eP,giEqualizationFactor:eR?1-eR:void 0,matcapFactor:null!=eE?[1,1,1]:void 0,matcapTexture:null!=eE?{index:eE}:void 0,rimLightingMixFactor:eS,rimMultiplyTexture:eL,parametricRimColorFactor:eb,parametricRimFresnelPowerFactor:eI,parametricRimLiftFactor:eU,outlineWidthMode:eO,outlineWidthFactor:eC,outlineWidthMultiplyTexture:eD,outlineColorFactor:eV,outlineLightingMixFactor:eF,uvAnimationMaskTexture:eH,uvAnimationScrollXSpeedFactor:ek,uvAnimationScrollYSpeedFactor:eW,uvAnimationRotationSpeedFactor:null!=(en=null==(ei=e.floatProperties)?void 0:ei._UvAnimRotation)?en:0};return eK(eJ({},t),{pbrMetallicRoughness:{baseColorFactor:eh,baseColorTexture:ec},normalTexture:eg,emissiveTexture:eM,emissiveFactor:e_,alphaMode:er?"BLEND":ea?"MASK":"OPAQUE",alphaCutoff:el,doubleSided:0===eu,extensions:{VRMC_materials_mtoon:ez}})}_parseV0UnlitProperties(e,t){var i,n,r,o,s;let a="VRM/UnlitTransparentZWrite"===e.shader,l="VRM/UnlitTransparent"===e.shader||a,u=this._v0ParseRenderQueue(e),d="VRM/UnlitCutout"===e.shader,h=d?null!=(n=null==(i=e.floatProperties)?void 0:i._Cutoff)?n:.5:void 0,p=this._portTextureTransform(e),c=(null!=(o=null==(r=e.vectorProperties)?void 0:r._Color)?o:[1,1,1,1]).map(e1),m=null==(s=e.textureProperties)?void 0:s._MainTex,f=null!=m?{index:m,extensions:eJ({},p)}:void 0;return eK(eJ({},t),{pbrMetallicRoughness:{baseColorFactor:c,baseColorTexture:f},alphaMode:l?"BLEND":d?"MASK":"OPAQUE",alphaCutoff:h,extensions:{VRMC_materials_mtoon:{specVersion:"1.0",transparentWithZWrite:a,renderQueueOffsetNumber:u,shadeColorFactor:c,shadeMultiplyTexture:f}}})}_portTextureTransform(e){var t,i,n,r,o;let s=null==(t=e.vectorProperties)?void 0:t._MainTex;if(null==s)return{};let a=[null!=(i=null==s?void 0:s[0])?i:0,null!=(n=null==s?void 0:s[1])?n:0],l=[null!=(r=null==s?void 0:s[2])?r:1,null!=(o=null==s?void 0:s[3])?o:1];return a[1]=1-l[1]-a[1],{KHR_texture_transform:{offset:a,scale:l}}}_v0ParseRenderQueue(e){var t,i;let n="VRM/UnlitTransparentZWrite"===e.shader,r=(null==(t=e.keywordMap)?void 0:t._ALPHABLEND_ON)!=void 0||"VRM/UnlitTransparent"===e.shader||n,o=(null==(i=e.floatProperties)?void 0:i._ZWrite)===1||n,s=0;if(r){let t=e.renderQueue;null!=t&&(s=o?this._renderQueueMapTransparentZWrite.get(t):this._renderQueueMapTransparent.get(t))}return s}_populateRenderQueueMap(e){let t=new Set,i=new Set;e.forEach(e=>{var n,r;let o="VRM/UnlitTransparentZWrite"===e.shader,s=(null==(n=e.keywordMap)?void 0:n._ALPHABLEND_ON)!=void 0||"VRM/UnlitTransparent"===e.shader||o,a=(null==(r=e.floatProperties)?void 0:r._ZWrite)===1||o;if(s){let n=e.renderQueue;null!=n&&(a?i.add(n):t.add(n))}}),t.size>10&&console.warn(`VRMMaterialsV0CompatPlugin: This VRM uses ${t.size} render queues for Transparent materials while VRM 1.0 only supports up to 10 render queues. The model might not be rendered correctly.`),i.size>10&&console.warn(`VRMMaterialsV0CompatPlugin: This VRM uses ${i.size} render queues for TransparentZWrite materials while VRM 1.0 only supports up to 10 render queues. The model might not be rendered correctly.`),Array.from(t).sort().forEach((e,i)=>{let n=Math.min(Math.max(i-t.size+1,-9),0);this._renderQueueMapTransparent.set(e,n)}),Array.from(i).sort().forEach((e,t)=>{this._renderQueueMapTransparentZWrite.set(e,Math.min(Math.max(t,0),9))})}},e2=(e,t,i)=>new Promise((n,r)=>{var o=e=>{try{a(i.next(e))}catch(e){r(e)}},s=e=>{try{a(i.throw(e))}catch(e){r(e)}},a=e=>e.done?n(e.value):Promise.resolve(e.value).then(o,s);a((i=i.apply(e,t)).next())}),e4=new n.Pa4,e5=class extends n.ZAu{constructor(e){super(),this._attrPosition=new n.TlE(new Float32Array([0,0,0,0,0,0]),3),this._attrPosition.setUsage(n.dj0);let t=new n.u9r;t.setAttribute("position",this._attrPosition);let i=new n.nls({color:16711935,depthTest:!1,depthWrite:!1});this._line=new n.x12(t,i),this.add(this._line),this.constraint=e}updateMatrixWorld(e){e4.setFromMatrixPosition(this.constraint.destination.matrixWorld),this._attrPosition.setXYZ(0,e4.x,e4.y,e4.z),this.constraint.source&&e4.setFromMatrixPosition(this.constraint.source.matrixWorld),this._attrPosition.setXYZ(1,e4.x,e4.y,e4.z),this._attrPosition.needsUpdate=!0,super.updateMatrixWorld(e)}};function e6(e,t){return t.set(e.elements[12],e.elements[13],e.elements[14])}var e9=new n.Pa4,e8=new n.Pa4;function e7(e){return e.invert?e.invert():e.inverse(),e}var te=class{constructor(e,t){this.destination=e,this.source=t,this.weight=1}},tt=new n.Pa4,ti=new n.Pa4,tn=new n.Pa4,tr=new n._fP,to=new n._fP,ts=new n._fP,ta=class extends te{get aimAxis(){return this._aimAxis}set aimAxis(e){this._aimAxis=e,this._v3AimAxis.set("PositiveX"===e?1:"NegativeX"===e?-1:0,"PositiveY"===e?1:"NegativeY"===e?-1:0,"PositiveZ"===e?1:"NegativeZ"===e?-1:0)}get dependencies(){let e=new Set([this.source]);return this.destination.parent&&e.add(this.destination.parent),e}constructor(e,t){super(e,t),this._aimAxis="PositiveX",this._v3AimAxis=new n.Pa4(1,0,0),this._dstRestQuat=new n._fP}setInitState(){this._dstRestQuat.copy(this.destination.quaternion)}update(){this.destination.updateWorldMatrix(!0,!1),this.source.updateWorldMatrix(!0,!1);let e=tr.identity(),t=to.identity();this.destination.parent&&(this.destination.parent.matrixWorld.decompose(e9,e,e8),e7(t.copy(e)));let i=tt.copy(this._v3AimAxis).applyQuaternion(this._dstRestQuat).applyQuaternion(e),n=e6(this.source.matrixWorld,ti).sub(e6(this.destination.matrixWorld,tn)).normalize(),r=ts.setFromUnitVectors(i,n).premultiply(t).multiply(e).multiply(this._dstRestQuat);this.destination.quaternion.copy(this._dstRestQuat).slerp(r,this.weight)}},tl=class{constructor(){this._constraints=new Set,this._objectConstraintsMap=new Map}get constraints(){return this._constraints}addConstraint(e){this._constraints.add(e);let t=this._objectConstraintsMap.get(e.destination);null==t&&(t=new Set,this._objectConstraintsMap.set(e.destination,t)),t.add(e)}deleteConstraint(e){this._constraints.delete(e),this._objectConstraintsMap.get(e.destination).delete(e)}setInitState(){let e=new Set,t=new Set;for(let i of this._constraints)this._processConstraint(i,e,t,e=>e.setInitState())}update(){let e=new Set,t=new Set;for(let i of this._constraints)this._processConstraint(i,e,t,e=>e.update())}_processConstraint(e,t,i,n){if(!i.has(e)){if(t.has(e))throw Error("VRMNodeConstraintManager: Circular dependency detected while updating constraints");for(let r of(t.add(e),e.dependencies))!function(e,t){let i=[e],n=e.parent;for(;null!==n;)i.unshift(n),n=n.parent;i.forEach(e=>{t(e)})}(r,e=>{let r=this._objectConstraintsMap.get(e);if(r)for(let e of r)this._processConstraint(e,t,i,n)});n(e),i.add(e)}}},tu=new n._fP,td=new n._fP,th=class extends te{get dependencies(){return new Set([this.source])}constructor(e,t){super(e,t),this._dstRestQuat=new n._fP,this._invSrcRestQuat=new n._fP}setInitState(){this._dstRestQuat.copy(this.destination.quaternion),e7(this._invSrcRestQuat.copy(this.source.quaternion))}update(){let e=tu.copy(this._invSrcRestQuat).multiply(this.source.quaternion),t=td.copy(this._dstRestQuat).multiply(e);this.destination.quaternion.copy(this._dstRestQuat).slerp(t,this.weight)}},tp=new n.Pa4,tc=new n._fP,tm=new n._fP,tf=class extends te{get rollAxis(){return this._rollAxis}set rollAxis(e){this._rollAxis=e,this._v3RollAxis.set("X"===e?1:0,"Y"===e?1:0,"Z"===e?1:0)}get dependencies(){return new Set([this.source])}constructor(e,t){super(e,t),this._rollAxis="X",this._v3RollAxis=new n.Pa4(1,0,0),this._dstRestQuat=new n._fP,this._invDstRestQuat=new n._fP,this._invSrcRestQuatMulDstRestQuat=new n._fP}setInitState(){this._dstRestQuat.copy(this.destination.quaternion),e7(this._invDstRestQuat.copy(this._dstRestQuat)),e7(this._invSrcRestQuatMulDstRestQuat.copy(this.source.quaternion)).multiply(this._dstRestQuat)}update(){let e=tc.copy(this._invDstRestQuat).multiply(this.source.quaternion).multiply(this._invSrcRestQuatMulDstRestQuat),t=tp.copy(this._v3RollAxis).applyQuaternion(e),i=tm.setFromUnitVectors(t,this._v3RollAxis).premultiply(this._dstRestQuat).multiply(e);this.destination.quaternion.copy(this._dstRestQuat).slerp(i,this.weight)}},tg=new Set(["1.0","1.0-beta"]),t_=class e{get name(){return e.EXTENSION_NAME}constructor(e,t){this.parser=e,this.helperRoot=null==t?void 0:t.helperRoot}afterRoot(e){return e2(this,null,function*(){e.userData.vrmNodeConstraintManager=yield this._import(e)})}_import(t){return e2(this,null,function*(){var i;let n=this.parser.json;if(!((null==(i=n.extensionsUsed)?void 0:i.indexOf(e.EXTENSION_NAME))!==-1))return null;let r=new tl,o=yield this.parser.getDependencies("node");return o.forEach((t,i)=>{var s;let a=n.nodes[i],l=null==(s=null==a?void 0:a.extensions)?void 0:s[e.EXTENSION_NAME];if(null==l)return;let u=l.specVersion;if(!tg.has(u)){console.warn(`VRMNodeConstraintLoaderPlugin: Unknown ${e.EXTENSION_NAME} specVersion "${u}"`);return}let d=l.constraint;if(null!=d.roll){let e=this._importRollConstraint(t,o,d.roll);r.addConstraint(e)}else if(null!=d.aim){let e=this._importAimConstraint(t,o,d.aim);r.addConstraint(e)}else if(null!=d.rotation){let e=this._importRotationConstraint(t,o,d.rotation);r.addConstraint(e)}}),t.scene.updateMatrixWorld(),r.setInitState(),r})}_importRollConstraint(e,t,i){let{source:n,rollAxis:r,weight:o}=i,s=new tf(e,t[n]);if(null!=r&&(s.rollAxis=r),null!=o&&(s.weight=o),this.helperRoot){let e=new e5(s);this.helperRoot.add(e)}return s}_importAimConstraint(e,t,i){let{source:n,aimAxis:r,weight:o}=i,s=new ta(e,t[n]);if(null!=r&&(s.aimAxis=r),null!=o&&(s.weight=o),this.helperRoot){let e=new e5(s);this.helperRoot.add(e)}return s}_importRotationConstraint(e,t,i){let{source:n,weight:r}=i,o=new th(e,t[n]);if(null!=r&&(o.weight=r),this.helperRoot){let e=new e5(o);this.helperRoot.add(e)}return o}};t_.EXTENSION_NAME="VRMC_node_constraint";var tv=(e,t,i)=>new Promise((n,r)=>{var o=e=>{try{a(i.next(e))}catch(e){r(e)}},s=e=>{try{a(i.throw(e))}catch(e){r(e)}},a=e=>e.done?n(e.value):Promise.resolve(e.value).then(o,s);a((i=i.apply(e,t)).next())}),tM=class{},tx=new n.Pa4,ty=new n.Pa4,tw=class extends tM{get type(){return"capsule"}constructor(e){var t,i,r,o;super(),this.offset=null!=(t=null==e?void 0:e.offset)?t:new n.Pa4(0,0,0),this.tail=null!=(i=null==e?void 0:e.tail)?i:new n.Pa4(0,0,0),this.radius=null!=(r=null==e?void 0:e.radius)?r:0,this.inside=null!=(o=null==e?void 0:e.inside)&&o}calculateCollision(e,t,i,n){tx.setFromMatrixPosition(e),ty.subVectors(this.tail,this.offset).applyMatrix4(e),ty.sub(tx);let r=ty.lengthSq();n.copy(t).sub(tx);let o=ty.dot(n);o<=0||(r<=o||ty.multiplyScalar(o/r),n.sub(ty));let s=n.length(),a=this.inside?this.radius-i-s:s-i-this.radius;return a<0&&(n.multiplyScalar(1/s),this.inside&&n.negate()),a}},tT=new n.Pa4,tP=new n.Vkp,tR=class extends tM{get type(){return"plane"}constructor(e){var t,i;super(),this.offset=null!=(t=null==e?void 0:e.offset)?t:new n.Pa4(0,0,0),this.normal=null!=(i=null==e?void 0:e.normal)?i:new n.Pa4(0,0,1)}calculateCollision(e,t,i,n){n.setFromMatrixPosition(e),n.negate().add(t),tP.getNormalMatrix(e),tT.copy(this.normal).applyNormalMatrix(tP).normalize();let r=n.dot(tT)-i;return n.copy(tT),r}},tE=new n.Pa4,tS=class extends tM{get type(){return"sphere"}constructor(e){var t,i,r;super(),this.offset=null!=(t=null==e?void 0:e.offset)?t:new n.Pa4(0,0,0),this.radius=null!=(i=null==e?void 0:e.radius)?i:0,this.inside=null!=(r=null==e?void 0:e.inside)&&r}calculateCollision(e,t,i,n){n.subVectors(t,tE.setFromMatrixPosition(e));let r=n.length(),o=this.inside?this.radius-i-r:r-i-this.radius;return o<0&&(n.multiplyScalar(1/r),this.inside&&n.negate()),o}},tA=new n.Pa4,tL=class extends n.u9r{constructor(e){super(),this.worldScale=1,this._currentRadius=0,this._currentOffset=new n.Pa4,this._currentTail=new n.Pa4,this._shape=e,this._attrPos=new n.TlE(new Float32Array(396),3),this.setAttribute("position",this._attrPos),this._attrIndex=new n.TlE(new Uint16Array(264),1),this.setIndex(this._attrIndex),this._buildIndex(),this.update()}update(){let e=!1,t=this._shape.radius/this.worldScale;this._currentRadius!==t&&(this._currentRadius=t,e=!0),this._currentOffset.equals(this._shape.offset)||(this._currentOffset.copy(this._shape.offset),e=!0);let i=tA.copy(this._shape.tail).divideScalar(this.worldScale);this._currentTail.distanceToSquared(i)>1e-10&&(this._currentTail.copy(i),e=!0),e&&this._buildPosition()}_buildPosition(){tA.copy(this._currentTail).sub(this._currentOffset);let e=tA.length()/this._currentRadius;for(let t=0;t<=16;t++){let i=t/16*Math.PI;this._attrPos.setXYZ(t,-Math.sin(i),-Math.cos(i),0),this._attrPos.setXYZ(17+t,e+Math.sin(i),Math.cos(i),0),this._attrPos.setXYZ(34+t,-Math.sin(i),0,-Math.cos(i)),this._attrPos.setXYZ(51+t,e+Math.sin(i),0,Math.cos(i))}for(let t=0;t<32;t++){let i=t/16*Math.PI;this._attrPos.setXYZ(68+t,0,Math.sin(i),Math.cos(i)),this._attrPos.setXYZ(100+t,e,Math.sin(i),Math.cos(i))}let t=Math.atan2(tA.y,Math.sqrt(tA.x*tA.x+tA.z*tA.z)),i=-Math.atan2(tA.z,tA.x);this.rotateZ(t),this.rotateY(i),this.scale(this._currentRadius,this._currentRadius,this._currentRadius),this.translate(this._currentOffset.x,this._currentOffset.y,this._currentOffset.z),this._attrPos.needsUpdate=!0}_buildIndex(){for(let e=0;e<34;e++){let t=(e+1)%34;this._attrIndex.setXY(2*e,e,t),this._attrIndex.setXY(68+2*e,34+e,34+t)}for(let e=0;e<32;e++){let t=(e+1)%32;this._attrIndex.setXY(136+2*e,68+e,68+t),this._attrIndex.setXY(200+2*e,100+e,100+t)}this._attrIndex.needsUpdate=!0}},tb=class extends n.u9r{constructor(e){super(),this.worldScale=1,this._currentOffset=new n.Pa4,this._currentNormal=new n.Pa4,this._shape=e,this._attrPos=new n.TlE(new Float32Array(18),3),this.setAttribute("position",this._attrPos),this._attrIndex=new n.TlE(new Uint16Array(10),1),this.setIndex(this._attrIndex),this._buildIndex(),this.update()}update(){let e=!1;this._currentOffset.equals(this._shape.offset)||(this._currentOffset.copy(this._shape.offset),e=!0),this._currentNormal.equals(this._shape.normal)||(this._currentNormal.copy(this._shape.normal),e=!0),e&&this._buildPosition()}_buildPosition(){this._attrPos.setXYZ(0,-.5,-.5,0),this._attrPos.setXYZ(1,.5,-.5,0),this._attrPos.setXYZ(2,.5,.5,0),this._attrPos.setXYZ(3,-.5,.5,0),this._attrPos.setXYZ(4,0,0,0),this._attrPos.setXYZ(5,0,0,.25),this.translate(this._currentOffset.x,this._currentOffset.y,this._currentOffset.z),this.lookAt(this._currentNormal),this._attrPos.needsUpdate=!0}_buildIndex(){this._attrIndex.setXY(0,0,1),this._attrIndex.setXY(2,1,2),this._attrIndex.setXY(4,2,3),this._attrIndex.setXY(6,3,0),this._attrIndex.setXY(8,4,5),this._attrIndex.needsUpdate=!0}},tI=class extends n.u9r{constructor(e){super(),this.worldScale=1,this._currentRadius=0,this._currentOffset=new n.Pa4,this._shape=e,this._attrPos=new n.TlE(new Float32Array(288),3),this.setAttribute("position",this._attrPos),this._attrIndex=new n.TlE(new Uint16Array(192),1),this.setIndex(this._attrIndex),this._buildIndex(),this.update()}update(){let e=!1,t=this._shape.radius/this.worldScale;this._currentRadius!==t&&(this._currentRadius=t,e=!0),this._currentOffset.equals(this._shape.offset)||(this._currentOffset.copy(this._shape.offset),e=!0),e&&this._buildPosition()}_buildPosition(){for(let e=0;e<32;e++){let t=e/16*Math.PI;this._attrPos.setXYZ(e,Math.cos(t),Math.sin(t),0),this._attrPos.setXYZ(32+e,0,Math.cos(t),Math.sin(t)),this._attrPos.setXYZ(64+e,Math.sin(t),0,Math.cos(t))}this.scale(this._currentRadius,this._currentRadius,this._currentRadius),this.translate(this._currentOffset.x,this._currentOffset.y,this._currentOffset.z),this._attrPos.needsUpdate=!0}_buildIndex(){for(let e=0;e<32;e++){let t=(e+1)%32;this._attrIndex.setXY(2*e,e,t),this._attrIndex.setXY(64+2*e,32+e,32+t),this._attrIndex.setXY(128+2*e,64+e,64+t)}this._attrIndex.needsUpdate=!0}},tU=new n.Pa4,tO=class extends n.ZAu{constructor(e){if(super(),this.matrixAutoUpdate=!1,this.collider=e,this.collider.shape instanceof tS)this._geometry=new tI(this.collider.shape);else if(this.collider.shape instanceof tw)this._geometry=new tL(this.collider.shape);else if(this.collider.shape instanceof tR)this._geometry=new tb(this.collider.shape);else throw Error("VRMSpringBoneColliderHelper: Unknown collider shape type detected");let t=new n.nls({color:16711935,depthTest:!1,depthWrite:!1});this._line=new n.ejS(this._geometry,t),this.add(this._line)}dispose(){this._geometry.dispose()}updateMatrixWorld(e){this.collider.updateWorldMatrix(!0,!1),this.matrix.copy(this.collider.matrixWorld);let t=this.matrix.elements;this._geometry.worldScale=tU.set(t[0],t[1],t[2]).length(),this._geometry.update(),super.updateMatrixWorld(e)}},tC=class extends n.u9r{constructor(e){super(),this.worldScale=1,this._currentRadius=0,this._currentTail=new n.Pa4,this._springBone=e,this._attrPos=new n.TlE(new Float32Array(294),3),this.setAttribute("position",this._attrPos),this._attrIndex=new n.TlE(new Uint16Array(194),1),this.setIndex(this._attrIndex),this._buildIndex(),this.update()}update(){let e=!1,t=this._springBone.settings.hitRadius/this.worldScale;this._currentRadius!==t&&(this._currentRadius=t,e=!0),this._currentTail.equals(this._springBone.initialLocalChildPosition)||(this._currentTail.copy(this._springBone.initialLocalChildPosition),e=!0),e&&this._buildPosition()}_buildPosition(){for(let e=0;e<32;e++){let t=e/16*Math.PI;this._attrPos.setXYZ(e,Math.cos(t),Math.sin(t),0),this._attrPos.setXYZ(32+e,0,Math.cos(t),Math.sin(t)),this._attrPos.setXYZ(64+e,Math.sin(t),0,Math.cos(t))}this.scale(this._currentRadius,this._currentRadius,this._currentRadius),this.translate(this._currentTail.x,this._currentTail.y,this._currentTail.z),this._attrPos.setXYZ(96,0,0,0),this._attrPos.setXYZ(97,this._currentTail.x,this._currentTail.y,this._currentTail.z),this._attrPos.needsUpdate=!0}_buildIndex(){for(let e=0;e<32;e++){let t=(e+1)%32;this._attrIndex.setXY(2*e,e,t),this._attrIndex.setXY(64+2*e,32+e,32+t),this._attrIndex.setXY(128+2*e,64+e,64+t)}this._attrIndex.setXY(192,96,97),this._attrIndex.needsUpdate=!0}},tN=new n.Pa4,tD=class extends n.ZAu{constructor(e){super(),this.matrixAutoUpdate=!1,this.springBone=e,this._geometry=new tC(this.springBone);let t=new n.nls({color:16776960,depthTest:!1,depthWrite:!1});this._line=new n.ejS(this._geometry,t),this.add(this._line)}dispose(){this._geometry.dispose()}updateMatrixWorld(e){this.springBone.bone.updateWorldMatrix(!0,!1),this.matrix.copy(this.springBone.bone.matrixWorld);let t=this.matrix.elements;this._geometry.worldScale=tN.set(t[0],t[1],t[2]).length(),this._geometry.update(),super.updateMatrixWorld(e)}},tV=class extends n.Tme{constructor(e){super(),this.colliderMatrix=new n.yGw,this.shape=e}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),function(e,t,i){let n=t.elements;e.copy(t),i&&(e.elements[12]=n[0]*i.x+n[4]*i.y+n[8]*i.z+n[12],e.elements[13]=n[1]*i.x+n[5]*i.y+n[9]*i.z+n[13],e.elements[14]=n[2]*i.x+n[6]*i.y+n[10]*i.z+n[14])}(this.colliderMatrix,this.matrixWorld,this.shape.offset)}},tF=new n.yGw,tB=class{constructor(e){this._inverseCache=new n.yGw,this._shouldUpdateInverse=!0,this.matrix=e,this._originalElements=e.elements,e.elements=new Proxy(e.elements,{set:(e,t,i)=>(this._shouldUpdateInverse=!0,e[t]=i,!0)})}get inverse(){if(this._shouldUpdateInverse){var e;(e=this._inverseCache.copy(this.matrix)).invert?e.invert():e.getInverse(tF.copy(e)),this._shouldUpdateInverse=!1}return this._inverseCache}revert(){this.matrix.elements=this._originalElements}},tH=new n.yGw,tk=new n.Pa4,tW=new n.Pa4,tz=new n.Pa4,tX=new n.Pa4,tG=new n.yGw,tY=class{constructor(e,t,i={},r=[]){var o,s,a,l,u,d;this._currentTail=new n.Pa4,this._prevTail=new n.Pa4,this._boneAxis=new n.Pa4,this._worldSpaceBoneLength=0,this._center=null,this._initialLocalMatrix=new n.yGw,this._initialLocalRotation=new n._fP,this._initialLocalChildPosition=new n.Pa4,this.bone=e,this.bone.matrixAutoUpdate=!1,this.child=t,this.settings={hitRadius:null!=(o=i.hitRadius)?o:0,stiffness:null!=(s=i.stiffness)?s:1,gravityPower:null!=(a=i.gravityPower)?a:0,gravityDir:null!=(u=null==(l=i.gravityDir)?void 0:l.clone())?u:new n.Pa4(0,-1,0),dragForce:null!=(d=i.dragForce)?d:.4},this.colliderGroups=r}get dependencies(){let e=new Set,t=this.bone.parent;t&&e.add(t);for(let t=0;t<this.colliderGroups.length;t++)for(let i=0;i<this.colliderGroups[t].colliders.length;i++)e.add(this.colliderGroups[t].colliders[i]);return e}get center(){return this._center}set center(e){var t;(null==(t=this._center)?void 0:t.userData.inverseCacheProxy)&&(this._center.userData.inverseCacheProxy.revert(),delete this._center.userData.inverseCacheProxy),this._center=e,this._center&&!this._center.userData.inverseCacheProxy&&(this._center.userData.inverseCacheProxy=new tB(this._center.matrixWorld))}get initialLocalChildPosition(){return this._initialLocalChildPosition}get _parentMatrixWorld(){return this.bone.parent?this.bone.parent.matrixWorld:tH}setInitState(){this._initialLocalMatrix.copy(this.bone.matrix),this._initialLocalRotation.copy(this.bone.quaternion),this.child?this._initialLocalChildPosition.copy(this.child.position):this._initialLocalChildPosition.copy(this.bone.position).normalize().multiplyScalar(.07);let e=this._getMatrixWorldToCenter();this.bone.localToWorld(this._currentTail.copy(this._initialLocalChildPosition)).applyMatrix4(e),this._prevTail.copy(this._currentTail),this._boneAxis.copy(this._initialLocalChildPosition).normalize()}reset(){this.bone.quaternion.copy(this._initialLocalRotation),this.bone.updateMatrix(),this.bone.matrixWorld.multiplyMatrices(this._parentMatrixWorld,this.bone.matrix);let e=this._getMatrixWorldToCenter();this.bone.localToWorld(this._currentTail.copy(this._initialLocalChildPosition)).applyMatrix4(e),this._prevTail.copy(this._currentTail)}update(e){if(e<=0)return;this._calcWorldSpaceBoneLength();let t=tW.copy(this._boneAxis).transformDirection(this._initialLocalMatrix).transformDirection(this._parentMatrixWorld);tX.copy(this._currentTail).add(tk.subVectors(this._currentTail,this._prevTail).multiplyScalar(1-this.settings.dragForce)).applyMatrix4(this._getMatrixCenterToWorld()).addScaledVector(t,this.settings.stiffness*e).addScaledVector(this.settings.gravityDir,this.settings.gravityPower*e),tz.setFromMatrixPosition(this.bone.matrixWorld),tX.sub(tz).normalize().multiplyScalar(this._worldSpaceBoneLength).add(tz),this._collision(tX),this._prevTail.copy(this._currentTail),this._currentTail.copy(tX).applyMatrix4(this._getMatrixWorldToCenter());let i=tG.multiplyMatrices(this._parentMatrixWorld,this._initialLocalMatrix).invert();this.bone.quaternion.setFromUnitVectors(this._boneAxis,tk.copy(tX).applyMatrix4(i).normalize()).premultiply(this._initialLocalRotation),this.bone.updateMatrix(),this.bone.matrixWorld.multiplyMatrices(this._parentMatrixWorld,this.bone.matrix)}_collision(e){for(let t=0;t<this.colliderGroups.length;t++)for(let i=0;i<this.colliderGroups[t].colliders.length;i++){let n=this.colliderGroups[t].colliders[i],r=n.shape.calculateCollision(n.colliderMatrix,e,this.settings.hitRadius,tk);if(r<0){e.addScaledVector(tk,-r),e.sub(tz);let t=e.length();e.multiplyScalar(this._worldSpaceBoneLength/t).add(tz)}}}_calcWorldSpaceBoneLength(){tk.setFromMatrixPosition(this.bone.matrixWorld),this.child?tW.setFromMatrixPosition(this.child.matrixWorld):(tW.copy(this._initialLocalChildPosition),tW.applyMatrix4(this.bone.matrixWorld)),this._worldSpaceBoneLength=tk.sub(tW).length()}_getMatrixCenterToWorld(){return this._center?this._center.matrixWorld:tH}_getMatrixWorldToCenter(){return this._center?this._center.userData.inverseCacheProxy.inverse:tH}};function tj(e,t){e.children.forEach(e=>{t(e)||tj(e,t)})}var tq=class{constructor(){this._joints=new Set,this._sortedJoints=[],this._hasWarnedCircularDependency=!1,this._ancestors=[],this._objectSpringBonesMap=new Map,this._isSortedJointsDirty=!1,this._relevantChildrenUpdated=this._relevantChildrenUpdated.bind(this)}get joints(){return this._joints}get springBones(){return console.warn("VRMSpringBoneManager: springBones is deprecated. use joints instead."),this._joints}get colliderGroups(){let e=new Set;return this._joints.forEach(t=>{t.colliderGroups.forEach(t=>{e.add(t)})}),Array.from(e)}get colliders(){let e=new Set;return this.colliderGroups.forEach(t=>{t.colliders.forEach(t=>{e.add(t)})}),Array.from(e)}addJoint(e){this._joints.add(e);let t=this._objectSpringBonesMap.get(e.bone);null==t&&(t=new Set,this._objectSpringBonesMap.set(e.bone,t)),t.add(e),this._isSortedJointsDirty=!0}addSpringBone(e){console.warn("VRMSpringBoneManager: addSpringBone() is deprecated. use addJoint() instead."),this.addJoint(e)}deleteJoint(e){this._joints.delete(e),this._objectSpringBonesMap.get(e.bone).delete(e),this._isSortedJointsDirty=!0}deleteSpringBone(e){console.warn("VRMSpringBoneManager: deleteSpringBone() is deprecated. use deleteJoint() instead."),this.deleteJoint(e)}setInitState(){this._sortJoints();for(let e=0;e<this._sortedJoints.length;e++){let t=this._sortedJoints[e];t.bone.updateMatrix(),t.bone.updateWorldMatrix(!1,!1),t.setInitState()}}reset(){this._sortJoints();for(let e=0;e<this._sortedJoints.length;e++){let t=this._sortedJoints[e];t.bone.updateMatrix(),t.bone.updateWorldMatrix(!1,!1),t.reset()}}update(e){this._sortJoints();for(let e=0;e<this._ancestors.length;e++)this._ancestors[e].updateWorldMatrix(0===e,!1);for(let t=0;t<this._sortedJoints.length;t++){let i=this._sortedJoints[t];i.bone.updateMatrix(),i.bone.updateWorldMatrix(!1,!1),i.update(e),tj(i.bone,this._relevantChildrenUpdated)}}_sortJoints(){if(!this._isSortedJointsDirty)return;let e=[],t=new Set,i=new Set,n=new Set;for(let r of this._joints)this._insertJointSort(r,t,i,e,n);this._sortedJoints=e;let r=function(e){var t;let i=new Map;for(let n of e){let r=n;do{let n=(null!=(t=i.get(r))?t:0)+1;if(n===e.size)return r;i.set(r,n),r=r.parent}while(null!==r)}return null}(n);this._ancestors=[],r&&(this._ancestors.push(r),tj(r,e=>{var t,i;return(null!=(i=null==(t=this._objectSpringBonesMap.get(e))?void 0:t.size)?i:0)>0||(this._ancestors.push(e),!1)})),this._isSortedJointsDirty=!1}_insertJointSort(e,t,i,n,r){if(!i.has(e)){if(t.has(e)){this._hasWarnedCircularDependency||(console.warn("VRMSpringBoneManager: Circular dependency detected"),this._hasWarnedCircularDependency=!0);return}for(let o of(t.add(e),e.dependencies)){let e=!1,s=null;!function(e,t){let i=[],n=e;for(;null!==n;)i.unshift(n),n=n.parent;i.forEach(e=>{t(e)})}(o,o=>{let a=this._objectSpringBonesMap.get(o);if(a)for(let o of a)e=!0,this._insertJointSort(o,t,i,n,r);else e||(s=o)}),s&&r.add(s)}n.push(e),i.add(e)}}_relevantChildrenUpdated(e){var t,i;return(null!=(i=null==(t=this._objectSpringBonesMap.get(e))?void 0:t.size)?i:0)>0||(e.updateWorldMatrix(!1,!1),!1)}},tQ="VRMC_springBone_extended_collider",t$=new Set(["1.0","1.0-beta"]),tZ=new Set(["1.0"]),tJ=class e{get name(){return e.EXTENSION_NAME}constructor(e,t){var i;this.parser=e,this.jointHelperRoot=null==t?void 0:t.jointHelperRoot,this.colliderHelperRoot=null==t?void 0:t.colliderHelperRoot,this.useExtendedColliders=null==(i=null==t?void 0:t.useExtendedColliders)||i}afterRoot(e){return tv(this,null,function*(){e.userData.vrmSpringBoneManager=yield this._import(e)})}_import(e){return tv(this,null,function*(){let t=yield this._v1Import(e);if(null!=t)return t;let i=yield this._v0Import(e);return null!=i?i:null})}_v1Import(t){return tv(this,null,function*(){var i,r,o,s,a;let l=t.parser.json;if(!((null==(i=l.extensionsUsed)?void 0:i.indexOf(e.EXTENSION_NAME))!==-1))return null;let u=new tq,d=yield t.parser.getDependencies("node"),h=null==(r=l.extensions)?void 0:r[e.EXTENSION_NAME];if(!h)return null;let p=h.specVersion;if(!t$.has(p))return console.warn(`VRMSpringBoneLoaderPlugin: Unknown ${e.EXTENSION_NAME} specVersion "${p}"`),null;let c=null==(o=h.colliders)?void 0:o.map((t,i)=>{var r,o,s,a,l,u,h,p,c,m,f,g,_,v,M;let x=d[t.node];if(null==x)return console.warn(`VRMSpringBoneLoaderPlugin: The collider #${i} attempted to use the node #${t.node} but not found`),null;let y=t.shape,w=null==(r=t.extensions)?void 0:r[tQ];if(this.useExtendedColliders&&null!=w){let t=w.specVersion;if(tZ.has(t)){let e=w.shape;if(e.sphere)return this._importSphereCollider(x,{offset:new n.Pa4().fromArray(null!=(o=e.sphere.offset)?o:[0,0,0]),radius:null!=(s=e.sphere.radius)?s:0,inside:null!=(a=e.sphere.inside)&&a});if(e.capsule)return this._importCapsuleCollider(x,{offset:new n.Pa4().fromArray(null!=(l=e.capsule.offset)?l:[0,0,0]),radius:null!=(u=e.capsule.radius)?u:0,tail:new n.Pa4().fromArray(null!=(h=e.capsule.tail)?h:[0,0,0]),inside:null!=(p=e.capsule.inside)&&p});if(e.plane)return this._importPlaneCollider(x,{offset:new n.Pa4().fromArray(null!=(c=e.plane.offset)?c:[0,0,0]),normal:new n.Pa4().fromArray(null!=(m=e.plane.normal)?m:[0,0,1])})}else console.warn(`VRMSpringBoneLoaderPlugin: Unknown ${tQ} specVersion "${t}". Fallbacking to the ${e.EXTENSION_NAME} definition`)}if(y.sphere)return this._importSphereCollider(x,{offset:new n.Pa4().fromArray(null!=(f=y.sphere.offset)?f:[0,0,0]),radius:null!=(g=y.sphere.radius)?g:0,inside:!1});if(y.capsule)return this._importCapsuleCollider(x,{offset:new n.Pa4().fromArray(null!=(_=y.capsule.offset)?_:[0,0,0]),radius:null!=(v=y.capsule.radius)?v:0,tail:new n.Pa4().fromArray(null!=(M=y.capsule.tail)?M:[0,0,0]),inside:!1});throw Error(`VRMSpringBoneLoaderPlugin: The collider #${i} has no valid shape`)}),m=null==(s=h.colliderGroups)?void 0:s.map((e,t)=>{var i;return{colliders:(null!=(i=e.colliders)?i:[]).flatMap(e=>{let i=null==c?void 0:c[e];return null==i?(console.warn(`VRMSpringBoneLoaderPlugin: The colliderGroup #${t} attempted to use a collider #${e} but not found`),[]):i}),name:e.name}});return null==(a=h.springs)||a.forEach((e,t)=>{var i;let r;let o=e.joints,s=null==(i=e.colliderGroups)?void 0:i.map(e=>{let i=null==m?void 0:m[e];if(null==i)throw Error(`VRMSpringBoneLoaderPlugin: The spring #${t} attempted to use a colliderGroup ${e} but not found`);return i}),a=null!=e.center?d[e.center]:void 0;o.forEach(e=>{if(r){let t=d[r.node],i=d[e.node],o={hitRadius:r.hitRadius,dragForce:r.dragForce,gravityPower:r.gravityPower,stiffness:r.stiffness,gravityDir:null!=r.gravityDir?new n.Pa4().fromArray(r.gravityDir):void 0},l=this._importJoint(t,i,o,s);a&&(l.center=a),u.addJoint(l)}r=e})}),u.setInitState(),u})}_v0Import(e){return tv(this,null,function*(){var t,i,r;let o=e.parser.json;if(!((null==(t=o.extensionsUsed)?void 0:t.indexOf("VRM"))!==-1))return null;let s=null==(i=o.extensions)?void 0:i.VRM,a=null==s?void 0:s.secondaryAnimation;if(!a)return null;let l=null==a?void 0:a.boneGroups;if(!l)return null;let u=new tq,d=yield e.parser.getDependencies("node"),h=null==(r=a.colliderGroups)?void 0:r.map(e=>{var t;let i=d[e.node];return{colliders:(null!=(t=e.colliders)?t:[]).map((e,t)=>{var r,o,s;let a=new n.Pa4(0,0,0);return e.offset&&a.set(null!=(r=e.offset.x)?r:0,null!=(o=e.offset.y)?o:0,e.offset.z?-e.offset.z:0),this._importSphereCollider(i,{offset:a,radius:null!=(s=e.radius)?s:0,inside:!1})})}});return null==l||l.forEach((e,t)=>{let i=e.bones;i&&i.forEach(i=>{var r,o,s,a;let l=d[i],p=new n.Pa4;e.gravityDir?p.set(null!=(r=e.gravityDir.x)?r:0,null!=(o=e.gravityDir.y)?o:0,null!=(s=e.gravityDir.z)?s:0):p.set(0,-1,0);let c=null!=e.center?d[e.center]:void 0,m={hitRadius:e.hitRadius,dragForce:e.dragForce,gravityPower:e.gravityPower,stiffness:e.stiffiness,gravityDir:p},f=null==(a=e.colliderGroups)?void 0:a.map(e=>{let i=null==h?void 0:h[e];if(null==i)throw Error(`VRMSpringBoneLoaderPlugin: The spring #${t} attempted to use a colliderGroup ${e} but not found`);return i});l.traverse(e=>{var t;let i=null!=(t=e.children[0])?t:null,n=this._importJoint(e,i,m,f);c&&(n.center=c),u.addJoint(n)})})}),e.scene.updateMatrixWorld(),u.setInitState(),u})}_importJoint(e,t,i,n){let r=new tY(e,t,i,n);if(this.jointHelperRoot){let e=new tD(r);this.jointHelperRoot.add(e),e.renderOrder=this.jointHelperRoot.renderOrder}return r}_importSphereCollider(e,t){let i=new tV(new tS(t));if(e.add(i),this.colliderHelperRoot){let e=new tO(i);this.colliderHelperRoot.add(e),e.renderOrder=this.colliderHelperRoot.renderOrder}return i}_importCapsuleCollider(e,t){let i=new tV(new tw(t));if(e.add(i),this.colliderHelperRoot){let e=new tO(i);this.colliderHelperRoot.add(e),e.renderOrder=this.colliderHelperRoot.renderOrder}return i}_importPlaneCollider(e,t){let i=new tV(new tR(t));if(e.add(i),this.colliderHelperRoot){let e=new tO(i);this.colliderHelperRoot.add(e),e.renderOrder=this.colliderHelperRoot.renderOrder}return i}};tJ.EXTENSION_NAME="VRMC_springBone";var tK=class{get name(){return"VRMLoaderPlugin"}constructor(e,t){var i,n,r,o,s,a,l,u,d,h;this.parser=e;let p=null==t?void 0:t.helperRoot,c=null==t?void 0:t.autoUpdateHumanBones;this.expressionPlugin=null!=(i=null==t?void 0:t.expressionPlugin)?i:new y(e),this.firstPersonPlugin=null!=(n=null==t?void 0:t.firstPersonPlugin)?n:new P(e),this.humanoidPlugin=null!=(r=null==t?void 0:t.humanoidPlugin)?r:new z(e,{helperRoot:p,autoUpdateHumanBones:c}),this.lookAtPlugin=null!=(o=null==t?void 0:t.lookAtPlugin)?o:new eT(e,{helperRoot:p}),this.metaPlugin=null!=(s=null==t?void 0:t.metaPlugin)?s:new eR(e),this.mtoonMaterialPlugin=null!=(a=null==t?void 0:t.mtoonMaterialPlugin)?a:new eW(e),this.materialsHDREmissiveMultiplierPlugin=null!=(l=null==t?void 0:t.materialsHDREmissiveMultiplierPlugin)?l:new eX(e),this.materialsV0CompatPlugin=null!=(u=null==t?void 0:t.materialsV0CompatPlugin)?u:new e3(e),this.springBonePlugin=null!=(d=null==t?void 0:t.springBonePlugin)?d:new tJ(e,{colliderHelperRoot:p,jointHelperRoot:p}),this.nodeConstraintPlugin=null!=(h=null==t?void 0:t.nodeConstraintPlugin)?h:new t_(e,{helperRoot:p})}beforeRoot(){return o(this,null,function*(){yield this.materialsV0CompatPlugin.beforeRoot(),yield this.mtoonMaterialPlugin.beforeRoot()})}loadMesh(e){return o(this,null,function*(){return yield this.mtoonMaterialPlugin.loadMesh(e)})}getMaterialType(e){let t=this.mtoonMaterialPlugin.getMaterialType(e);return null!=t?t:null}extendMaterialParams(e,t){return o(this,null,function*(){yield this.materialsHDREmissiveMultiplierPlugin.extendMaterialParams(e,t),yield this.mtoonMaterialPlugin.extendMaterialParams(e,t)})}afterRoot(e){return o(this,null,function*(){yield this.metaPlugin.afterRoot(e),yield this.humanoidPlugin.afterRoot(e),yield this.expressionPlugin.afterRoot(e),yield this.lookAtPlugin.afterRoot(e),yield this.firstPersonPlugin.afterRoot(e),yield this.springBonePlugin.afterRoot(e),yield this.nodeConstraintPlugin.afterRoot(e),yield this.mtoonMaterialPlugin.afterRoot(e);let t=e.userData.vrmMeta,i=e.userData.vrmHumanoid;if(t&&i){let n=new eS({scene:e.scene,expressionManager:e.userData.vrmExpressionManager,firstPerson:e.userData.vrmFirstPerson,humanoid:i,lookAt:e.userData.vrmLookAt,meta:t,materials:e.userData.vrmMToonMaterials,springBoneManager:e.userData.vrmSpringBoneManager,nodeConstraintManager:e.userData.vrmNodeConstraintManager});e.userData.vrm=n}})}};function t0(e,t,i){if(1===t.size){let i=t.values().next().value;if(1===i.weight)return e[i.index]}let r=new Float32Array(3*e[0].count),o=0;if(i)o=1;else for(let e of t)o+=e.weight;for(let i of t){let t=e[i.index],n=i.weight/o;for(let e=0;e<t.count;e++)r[3*e+0]+=t.getX(e)*n,r[3*e+1]+=t.getY(e)*n,r[3*e+2]+=t.getZ(e)*n}return new n.TlE(r,3)}var t1=class{constructor(){this._objectIndexMap=new Map,this._index=0}get(e){return this._objectIndexMap.get(e)}getOrCreate(e){let t=this._objectIndexMap.get(e);return null==t&&(t=this._index,this._objectIndexMap.set(e,t),this._index++),t}};function t3(e){if(Object.values(e).forEach(e=>{(null==e?void 0:e.isTexture)&&e.dispose()}),e.isShaderMaterial){let t=e.uniforms;t&&Object.values(t).forEach(e=>{let t=e.value;(null==t?void 0:t.isTexture)&&t.dispose()})}e.dispose()}function t2(e){let t=e.geometry;t&&t.dispose();let i=e.skeleton;i&&i.dispose();let n=e.material;n&&(Array.isArray(n)?n.forEach(e=>t3(e)):n&&t3(n))}var t4=class{constructor(){}};t4.combineMorphs=function(e){var t;let i=function(e){let t=new Set;return e.traverse(e=>{e.isMesh&&t.add(e)}),t}(e.scene),n=new Map,r=null==(t=e.expressionManager)?void 0:t.expressionMap;if(null!=r)for(let[e,t]of Object.entries(r)){let i=new Set;for(let r of t.binds)if(r instanceof _){if(0!==r.weight)for(let t of r.primitives){let i=n.get(t);null==i&&(i=new Map,n.set(t,i));let o=i.get(e);null==o&&(o=new Set,i.set(e,o)),o.add(r)}i.add(r)}for(let e of i)t.deleteBind(e)}for(let e of i){let t=n.get(e);if(null==t)continue;let i=e.geometry.morphAttributes;e.geometry.morphAttributes={};let o=e.geometry.clone();e.geometry=o;let s=o.morphTargetsRelative,a=null!=i.position,l=null!=i.normal,u={},d={},h=[];if(a||l){a&&(u.position=[]),l&&(u.normal=[]);let n=0;for(let[o,p]of t)a&&(u.position[n]=t0(i.position,p,s)),l&&(u.normal[n]=t0(i.normal,p,s)),null==r||r[o].addBind(new _({index:n,weight:1,primitives:[e]})),d[o]=n,h.push(0),n++}o.morphAttributes=u,e.morphTargetDictionary=d,e.morphTargetInfluences=h}},t4.combineSkeletons=function(e){var t;let i=function(e){let t=new Set;return e.traverse(e=>{e.isSkinnedMesh&&t.add(e)}),t}(e),r=new Map;for(let e of i){let i=e.geometry,n=i.getAttribute("skinIndex"),o=null!=(t=r.get(n))?t:new Map;r.set(n,o);let s=i.getAttribute("skinWeight"),a=function(e,t){let i=new Set;for(let n=0;n<e.count;n++)for(let r=0;r<e.itemSize;r++){let o=e.getComponent(n,r);0!==t.getComponent(n,r)&&i.add(o)}return i}(n,s);o.set(s,a)}let o=new Map;for(let e of i){let t=function(e,t){let i=new Map,n=e.skeleton,r=e.geometry,o=r.getAttribute("skinIndex"),s=r.getAttribute("skinWeight"),a=t.get(o),l=null==a?void 0:a.get(s);if(!l)throw Error("Unreachable. attributeUsedIndexSetMap does not know the skin index attribute or the skin weight attribute.");for(let e of l)i.set(n.bones[e],n.boneInverses[e]);return i}(e,r);o.set(e,t)}let s=[];for(let[e,t]of o){let i=!1;for(let n of s)if(function(e,t){for(let[i,n]of e.entries()){let e=t.get(i);if(null!=e&&!function(e,t,i){if(i=i||1e-4,e.elements.length!=t.elements.length)return!1;for(let n=0,r=e.elements.length;n<r;n++)if(Math.abs(e.elements[n]-t.elements[n])>i)return!1;return!0}(n,e))return!1}return!0}(t,n.boneInverseMap)){for(let[r,o]of(i=!0,n.meshes.add(e),t))n.boneInverseMap.set(r,o);break}i||s.push({boneInverseMap:t,meshes:new Set([e])})}let a=new Map,l=new t1,u=new t1,d=new t1;for(let e of s){let{boneInverseMap:t,meshes:i}=e,r=Array.from(t.keys()),o=Array.from(t.values()),s=new n.OdW(r,o),h=u.getOrCreate(s);for(let e of i){let t=e.geometry.getAttribute("skinIndex"),i=l.getOrCreate(t),n=e.skeleton.bones,o=n.map(e=>d.getOrCreate(e)).join(","),s=`${i};${h};${o}`,u=a.get(s);null==u&&(function(e,t,i){let n=new Map;for(let e of t)n.set(e,n.size);let r=new Map;for(let[e,t]of i.entries()){let i=n.get(t);r.set(i,e)}for(let t=0;t<e.count;t++)for(let i=0;i<e.itemSize;i++){let n=e.getComponent(t,i),o=r.get(n);e.setComponent(t,i,o)}e.needsUpdate=!0}(u=t.clone(),n,r),a.set(s,u)),e.geometry.setAttribute("skinIndex",u)}for(let e of i)e.bind(s,new n.yGw)}},t4.deepDispose=function(e){e.traverse(t2)},t4.removeUnnecessaryJoints=function(e,t){var i,r;console.warn("VRMUtils.removeUnnecessaryJoints: removeUnnecessaryJoints is deprecated. Use combineSkeletons instead. combineSkeletons contributes more to the performance improvement. This function will be removed in the next major version.");let o=null!=(i=null==t?void 0:t.experimentalSameBoneCounts)&&i,s=[];e.traverse(e=>{"SkinnedMesh"===e.type&&s.push(e)});let a=new Map,l=0;for(let e of s){let t=e.geometry.getAttribute("skinIndex");if(a.has(t))continue;let i=new Map,n=new Map;for(let e=0;e<t.count;e++)for(let r=0;r<t.itemSize;r++){let o=t.getComponent(e,r),s=i.get(o);null==s&&(s=i.size,i.set(o,s),n.set(s,o)),t.setComponent(e,r,s)}t.needsUpdate=!0,a.set(t,n),l=Math.max(l,i.size)}for(let e of s){let t=e.geometry.getAttribute("skinIndex"),i=a.get(t),s=[],u=[],d=o?l:i.size;for(let t=0;t<d;t++){let n=null!=(r=i.get(t))?r:0;s.push(e.skeleton.bones[n]),u.push(e.skeleton.boneInverses[n])}let h=new n.OdW(s,u);e.bind(h,new n.yGw)}},t4.removeUnnecessaryVertices=function(e){let t=new Map;e.traverse(e=>{var i,r,o,s;if(!e.isMesh)return;let a=e.geometry,l=a.index;if(null==l)return;let u=t.get(a);if(null!=u){e.geometry=u;return}let d=Object.values(a.attributes)[0].count,h=Array(d),p=0,c=l.array;for(let e=0;e<c.length;e++){let t=c[e];!h[t]&&(h[t]=!0,p++)}if(p===d)return;let m=[],f=[],g=0;for(let e=0;e<h.length;e++)if(h[e]){let t=g++;m[e]=t,f[t]=e}let _=new n.u9r;_.name=a.name,_.morphTargetsRelative=a.morphTargetsRelative,a.groups.forEach(e=>{_.addGroup(e.start,e.count,e.materialIndex)}),_.boundingBox=null!=(r=null==(i=a.boundingBox)?void 0:i.clone())?r:null,_.boundingSphere=null!=(s=null==(o=a.boundingSphere)?void 0:o.clone())?s:null,_.setDrawRange(a.drawRange.start,a.drawRange.count),_.userData=a.userData,t.set(a,_);{let e=l.array,t=new e.constructor(e.length);for(let i=0;i<e.length;i++){let n=m[e[i]];t[i]=n}_.setIndex(new n.TlE(t,1,!1))}Object.keys(a.attributes).forEach(e=>{let t=a.attributes[e];if(t.isInterleavedBufferAttribute)throw Error("removeUnnecessaryVertices: InterleavedBufferAttribute is not supported");let i=t.array,{itemSize:r,normalized:o}=t,s=new i.constructor(f.length*r);f.forEach((e,t)=>{for(let n=0;n<r;n++)s[t*r+n]=i[e*r+n]}),_.setAttribute(e,new n.TlE(s,r,o))});let v=!0;Object.keys(a.morphAttributes).forEach(e=>{_.morphAttributes[e]=[];let t=a.morphAttributes[e];for(let i=0;i<t.length;i++){let r=t[i];if(r.isInterleavedBufferAttribute)throw Error("removeUnnecessaryVertices: InterleavedBufferAttribute is not supported");let o=r.array,{itemSize:s,normalized:a}=r,l=new o.constructor(f.length*s);f.forEach((e,t)=>{for(let i=0;i<s;i++)l[t*s+i]=o[e*s+i]}),v=v&&l.every(e=>0===e),_.morphAttributes[e][i]=new n.TlE(l,s,a)}}),v&&(_.morphAttributes={}),e.geometry=_}),Array.from(t.keys()).forEach(e=>{e.dispose()})},t4.rotateVRM0=function(e){var t;(null==(t=e.meta)?void 0:t.metaVersion)==="0"&&(e.scene.rotation.y=Math.PI)}}}]);